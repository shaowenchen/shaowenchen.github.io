<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>流程 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E6%B5%81%E7%A8%8B/</link><description>Recent content in 流程 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sat, 16 Dec 2023 11:15:11 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E6%B5%81%E7%A8%8B/atom.xml" rel="self" type="application/rss+xml"/><item><title>混沌工程与落地实践</title><link>https://www.chenshaowen.com/blog/chaos-engineering-and-practice.html</link><pubDate>Sat, 16 Dec 2023 11:15:11 +0000</pubDate><atom:modified>Sat, 16 Dec 2023 11:15:11 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/chaos-engineering-and-practice.html</guid><description>两个月前，我在业务团队有过一次关于混沌工程实践的分享，这里主要整理下讲稿的内容。 点击查看演示文稿 1. 混沌产生 1.1 混沌学科的产生 在讲混沌之前，我们可以先思考一下混沌、混沌工程和我们线上服务之间的关联。 我们经常听到的故事是，一只在亚马逊河流中的蝴蝶</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Chaos</category><category>实践</category><category>流程</category><category>规范</category></item><item><title>使用 PyGithub 自动创建 Label</title><link>https://www.chenshaowen.com/blog/how-to-create-labels-by-pygithub.html</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><atom:modified>Fri, 01 May 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-create-labels-by-pygithub.html</guid><description>1. 关于 Label 在前面的文档 如何使用 python-gitlab 自动创建 GitLab Label 中，我已经阐述了 Label 可以用于简单的项目管理。 一个团队，通常不止一个代码仓库，为了减轻沟通和学习成本，除了使用一致的工具链，还应该达成一定的基础共识。这些基础共识，促使大家达成最佳的实践方式。同一个大项</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>GitHub</category><category>流程</category><category>研发</category></item><item><title>你不知道的 Git 使用技巧</title><link>https://www.chenshaowen.com/blog/git-skills-you-do-not-notice.html</link><pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 17 May 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/git-skills-you-do-not-notice.html</guid><description>1. Pages 功能 GitHub、GitLab、Bitbucket 等，都提供了免费的静态页面托管服务，称之为 Pages 。利用 Pages 服务，可以发布文档、博客等。 以 GitHub 为例，通常只需要简单几个步骤，就可以使用 Pages： 新建一个项目：[username].github.</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>技巧</category><category>Git</category><category>流程</category></item><item><title>敏捷开发之研发流程</title><link>https://www.chenshaowen.com/blog/r-and-d-process-of-agile-development.html</link><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><atom:modified>Thu, 14 Mar 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/r-and-d-process-of-agile-development.html</guid><description>1. 敏捷开发是什么 在传统的软件研发模型中，从提出需求到最后交付，时间周期较长。瀑布模型遵循需求分析、设计、编码、集成、测试、维护六个步骤进行。一旦需求发生变化，不仅浪费前期投入，还不易于调整。 敏捷开发是一种应对快速变化的需求的软件开发能力。特</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>分支</category><category>敏捷</category><category>流程</category><category>测试</category></item></channel></rss>