<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>文件 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E6%96%87%E4%BB%B6/</link><description>Recent content in 文件 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sun, 19 Dec 2021 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E6%96%87%E4%BB%B6/atom.xml" rel="self" type="application/rss+xml"/><item><title>在 MacOS 上读取 Btrfs 分区文件</title><link>https://www.chenshaowen.com/blog/how-to-reading-btrfs-partition-files-under-macos.html</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><atom:modified>Sun, 19 Dec 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-reading-btrfs-partition-files-under-macos.html</guid><description>1. 背景和前置条件 Btrfs 文件系统相较于 Ext4 ，是一种更年轻的文件系统，具有更多可玩的特征，比如支持快照、子卷、校验和自检、软 RAID 甚至透明压缩等。 但是在没有运维能力的情况下，建议不要使用 Btrfs 文件系统。本文记录的是，在群辉 DSM 系统下，将 Btrfs 文件系统的磁盘拆下后，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>MacOS</category><category>Btrfs</category><category>文件</category></item><item><title>开发 Tips（4）</title><link>https://www.chenshaowen.com/blog/developing-tips-4.html</link><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Sun, 11 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-4.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. WhiteNoise 转发静态文件 Django 内置的静态文件服务器效率很低，而 WhiteNoise 是一个不错的替代品。具有如下特点： 通常用于 PaaS 服务 支持 wsgi 应用程序，针对 Django 进行了特殊适配 配合 CDN 使用，更佳 在 Gunicorn 配合下，使用 sendfile 系统调用，处理效率非常高 相比</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>文件</category><category>Django</category><category>CentOS</category><category>Docker</category></item><item><title>Django 中对静态文件版本的控制</title><link>https://www.chenshaowen.com/blog/control-of-static-file-version-in-django.html</link><pubDate>Fri, 06 Oct 2017 09:58:43 +0000</pubDate><atom:modified>Fri, 06 Oct 2017 09:58:43 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/control-of-static-file-version-in-django.html</guid><description>为了快速地响应用户的需求、满足运营活动的需要，互联网产品通常有着非常高的发布频率。采用敏捷开发的方式，缩短了交付的周期，加快了产品的迭代，也给项目的文件管理带来了挑战。前端工程直接面向用户，首当其冲，最值得重视。频繁更新的图片、样式、交互，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>前端</category><category>JavaScript</category><category>文件</category><category>研发</category><category>版本</category></item><item><title>Django 静态文件处理</title><link>https://www.chenshaowen.com/blog/django-static-file-processing.html</link><pubDate>Thu, 05 Oct 2017 15:42:27 +0000</pubDate><atom:modified>Thu, 05 Oct 2017 15:42:27 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-static-file-processing.html</guid><description>1. Django 静态文件分类 Django 静态文件分为两类：static 和 media。 static： 是页面引用的 JS、CSS、Image 等文件 media：是用户上传的文件 2. 生产环境配置 生产环境，通常配置 Nginx 转发静态文件请求，而 Django 处理动态请求。 nginx 配置 1 2 3 4 5 6 7 location /media</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>前端</category><category>文件</category><category>Python</category></item></channel></rss>