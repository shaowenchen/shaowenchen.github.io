<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>学习 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E5%AD%A6%E4%B9%A0/</link><description>Recent content in 学习 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sun, 09 Feb 2025 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E5%AD%A6%E4%B9%A0/atom.xml" rel="self" type="application/rss+xml"/><item><title>以 Qwen 为例，学习大模型的结构</title><link>https://www.chenshaowen.com/blog/structure-of-large-models-with-qwen.html</link><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><atom:modified>Sun, 09 Feb 2025 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/structure-of-large-models-with-qwen.html</guid><description>1. Qwen 模型介绍 2023 年 4 月，阿里巴巴推出 Qwen 的测试版。 2023 年 12 月，阿里巴巴开源了 Qwen 的第一个版本。 2024 年 9 月，阿里巴巴发布了 Qwen2.5。 2025 年 1 月，阿里巴巴发布了 Qwen 2.5-Max。 Qwen 2.5 是 Qwen 大语言模型的目前最新系列。之所以说是系列，是因为在训练完一个预训</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Qwen</category><category>大模型</category><category>学习</category></item><item><title>一起来学 Go --（5）Goroutine 和 Channel</title><link>https://www.chenshaowen.com/blog/let-us-start-learning-go-5.html</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><atom:modified>Thu, 03 Sep 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/let-us-start-learning-go-5.html</guid><description>1. Go 中的并发模型 1.1 通信模型 CSP CSP 全称 Communicating Sequential Process ，通信顺序进程，描述的是一种并发通信模型。Process 可以使用很多个 Channel ，而 Channel 不关心谁在使用它，只负责收发数据。 Go 社区中，有一句非常著名的论断: 不要通过共享内存来通信，要通过通信来共享内存。意思是，不</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Go</category><category>并发</category><category>并行</category><category>Goroutine</category><category>Channel</category><category>学习</category><category>一起来学Go</category></item><item><title>Kubernetes 之 Volumes</title><link>https://www.chenshaowen.com/blog/volumes-of-kubernetes.html</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><atom:modified>Mon, 05 Aug 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/volumes-of-kubernetes.html</guid><description>1. Docker 的存储卷 1.2 Docker 中的 Volume Docker Volume 将宿主机目录，挂载到容器中。在容器中修改的文件内容，将会被持久化到宿主机中。即时容器被删除，宿主机中的文件也会被保留。 Docker 使用 /var/lib/docker/volumes/ 存储容器的 Volume。 查看本地 Volume ： 1 2 3 4 5 6 7 8 9 tree /var/lib/docker/volumes/ -L 3 /var/lib/docker/volumes/ |-- 714450f353b26b5aa57aa352766c201c0851685e0e28c2e67ae1631f29c465b4 | `-- _data | |-- access.log -&amp;gt; /dev/stdout | `--</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>Kubernetes</category><category>学习</category></item><item><title>Kubernetes 之 Labels、Selectors</title><link>https://www.chenshaowen.com/blog/labels-and-selectors-of-kubernetes.html</link><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><atom:modified>Sun, 04 Aug 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/labels-and-selectors-of-kubernetes.html</guid><description>1. Labels 1.1 什么是 Labels Labels 是一对关联到对象的键值对。可以在创建对象时，直接添加 Labels ，也可以在创建之后动态修改。 Labels 格式: 1 2 3 4 &amp;#34;labels&amp;#34;: { &amp;#34;key1&amp;#34; : &amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34; : &amp;#34;value2&amp;#34; } 格式要求： Key，不能重复 Value，须以字母或数字开头，可以使用字母、数字、连字符、点和下划线，最长63个</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>Kubernetes</category><category>学习</category></item><item><title>Kubernetes 中的基本概念</title><link>https://www.chenshaowen.com/blog/basic-concepts-in-kubernetes.html</link><pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 19 Jul 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/basic-concepts-in-kubernetes.html</guid><description>1. 集群 1.1 Master Master 负责管理和维护 Kubernetes 集群信息，并向 Node 下放任务和接收反馈信息。 Master 上运行的组件有 kube-apiserver、kube-scheduler、kube-controller-manager、cloud-controller-manager</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>Kubernetes</category><category>概念</category><category>学习</category></item><item><title>Pytest 进阶学习之 Mock</title><link>https://www.chenshaowen.com/blog/mock-of-pytest.html</link><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><atom:modified>Sun, 27 Jan 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/mock-of-pytest.html</guid><description>1. 为什么需要 Mock 在做单元测试时，被测试函数有时并不是一个可执行的独立单元。被测试函数依赖于一些外部资源，比如另外一个函数的返回值、数据库中某一条数据值等。 为了屏蔽外部依赖的干扰，我们会采用 Mock 技术。通过模拟测试资源的方式，满足依赖条件。 从设计模</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>测试</category><category>Python</category><category>Pytest</category><category>学习</category></item><item><title>Python2 源码学习之 pyc</title><link>https://www.chenshaowen.com/blog/python2-source-of-pyc.html</link><pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 09 Mar 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/python2-source-of-pyc.html</guid><description>文中以 Python 2.7.8 版本源码为例。 1. Python 中常见的文件格式 py 文件 Python 源代码文件，可以使用文本编辑器进行修改。 pyc 文件 Python 源代码编译后，生成的字节码文件。 pyw 文件 pyc 文件执行时，会出现 console 窗口；pyw 文件执行时，不会出现。pyw 文件主要是用来运行纯 GUI 图形用户界面程序，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Python</category><category>源码</category><category>编译</category><category>学习</category></item><item><title>BWAPP 学习与使用</title><link>https://www.chenshaowen.com/blog/study-of-bwapp.html</link><pubDate>Sun, 25 Dec 2016 15:38:42 +0000</pubDate><atom:modified>Sun, 25 Dec 2016 15:38:42 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/study-of-bwapp.html</guid><description>1. BWAPP简介 buggy web Application，简称BWAPP，这是一个集成了各种常见漏洞和最新漏洞的开源Web应用程序，目的是帮助网络安全爱好者、开发人员和学生发现并防止网络漏洞。包含了超过100种漏洞，涵盖了所有主要的已知Web漏洞，包括O</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>安全</category><category>网络</category><category>学习</category><category>BWAPP</category></item></channel></rss>