<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>S3 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/s3/</link><description>Recent content in S3 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 05 Dec 2024 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/s3/atom.xml" rel="self" type="application/rss+xml"/><item><title>使用 Fluid 和 S3FS 对接 S3 存储及性能测试</title><link>https://www.chenshaowen.com/blog/using-fluid-and-s3fs-to-access-s3-storage-and-performance-testing.html</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><atom:modified>Thu, 05 Dec 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-fluid-and-s3fs-to-access-s3-storage-and-performance-testing.html</guid><description>本文使用的是 Fluid 1.0 版本，高版本的配置文件路径发生了变化，需要根据实际情况调整。 1. 制作镜像 1.1 fluid_config_init.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #!/usr/bin/env python import json import os rawStr = &amp;#34;&amp;#34; with open(&amp;#34;/etc/fluid/config.json&amp;#34;, &amp;#34;r&amp;#34;) as f: rawStr = f.readlines() rawStr = rawStr[0] script = &amp;#34;&amp;#34;&amp;#34; #!/bin/sh set -ex MNT_TO=$targetPath trap &amp;#34;umount ${MNT_TO}&amp;#34; SIGTERM mkdir -p ${MNT_TO}</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>s3</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>使用 Fluid 对接 S3 存储及性能测试</title><link>https://www.chenshaowen.com/blog/using-fluid-to-access-s3-storage-and-performance-testing.html</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><atom:modified>Wed, 04 Dec 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-fluid-to-access-s3-storage-and-performance-testing.html</guid><description>1. Jindo 挂载 S3 配置环境变量 1 2 3 4 export ENDPOINT=obs.ap-southeast-3.myhuaweicloud.com export BUCKET= export AK= export SK= 创建凭证 1 2 3 4 5 6 7 8 9 10 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: v1 kind: Secret metadata: name: mys3secret type: Opaque stringData: fs.s3.accessKeyId: ${AK} fs.s3.accessKeySecret: ${SK} EOF 创建 Dataset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: Dataset metadata: name: mys3-jindo spec: mounts: - mountPoint: s3://${BUCKET}/test2/ options: fs.s3.endpoint: ${ENDPOINT} encryptOptions: - name: fs.s3.accessKeyId valueFrom: secretKeyRef: name: mys3secret key: fs.s3.accessKeyId - name: fs.s3.accessKeySecret valueFrom: secretKeyRef: name:</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>s3</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>使用 S3 存储 Terraform 的状态</title><link>https://www.chenshaowen.com/blog/using-s3-to-store-terraform-state.html</link><pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate><atom:modified>Sun, 27 Dec 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-s3-to-store-terraform-state.html</guid><description>1. Terraform 如何管理资源状态 在执行 terraform init 之后，Terraform 会将依赖的插件下载到本地 plugins 目录。 1 2 3 4 5 6 7 8 9 10 11 12 13 tree -aL 5 . |-- myresource.tf |-- .terraform | `-- plugins | |-- registry.terraform.io | | |-- hashicorp | | | `-- null | | `-- shaowenchen | | `-- qingcloud | `-- selections.json `-- var.tf 在执行 terraform apply 之后，Terraform 会使用 terraform.tfstate 文件存储资源的</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>S3</category><category>Terraform</category></item><item><title>Jenkins 中的构建产物与缓存</title><link>https://www.chenshaowen.com/blog/artifacts-and-cache-in-jenkins.html</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><atom:modified>Sun, 21 Jun 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/artifacts-and-cache-in-jenkins.html</guid><description>在 CICD 的流程中，需要保存的产物主要有两类，构建产物和缓存。构建产物是最终的执行结果，缓存是为了优化下一次的构建速度。本篇主要描述的是在 Jenkins 中如何对构建产物和缓存进行归档，并结合对象存储进行实践。有部分示例使用的是 在 Kubernetes 上动态创建 Jenkins Slave 进行构建，配置</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Jenkins</category><category>S3</category><category>DevOps</category><category>Cache</category></item></channel></rss>