<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>最佳实践 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><description>Recent content in 最佳实践 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sat, 23 Dec 2023 11:22:55 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/atom.xml" rel="self" type="application/rss+xml"/><item><title>大模型应用设计与实现指南</title><link>https://www.chenshaowen.com/blog/large-model-application-design-and-implementation-guide.html</link><pubDate>Sat, 23 Dec 2023 11:22:55 +0000</pubDate><atom:modified>Sat, 23 Dec 2023 11:22:55 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/large-model-application-design-and-implementation-guide.html</guid><description>1. 直接使用大模型面临的问题 输出不稳定性 生成式 AI 的特点之一，输出结果的多样性。同样一个问题，问大模型多次，可能会得到不同的答案。 这种输出的不确定性，在对话、创作场景下，会给用户带来惊喜。但在确定性要求比较高的场景下，大模型进入不了采纳阶段。 数</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>LLM</category><category>AI</category><category>最佳实践</category></item><item><title>容器下的 Go 应用程序优化</title><link>https://www.chenshaowen.com/blog/optimization-go-applications-in-containers.html</link><pubDate>Sat, 11 Nov 2023 08:05:48 +0000</pubDate><atom:modified>Sat, 11 Nov 2023 08:05:48 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/optimization-go-applications-in-containers.html</guid><description>1. 内存对齐 结构体内字段，从大到小排列 减少内存占用 安装 fieldalignment 工具 1 go install golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment@latest 分析并修复内存对齐 1 2 3 4 5 6 7 8 9 fieldalignment -fix ./... /Users/shaowenchen/Code/app/config/config.go:136:14: struct with 32 pointer bytes could be 24 /Users/shaowenchen/Code/app/config/config.go:150:11: struct of size 96 could be 88 /Users/shaowenchen/Code/app/config/config.go:166:14: struct of size 152 could be 144 /Users/shaowenchen/Code/app/config/config.go:194:12: struct with 80 pointer bytes could be 72 /Users/shaowenchen/Code/app/config/config.go:209:12: struct with 56 pointer bytes could be 40 /Users/shaowenchen/Code/app/dao/gormx/gorm.go:12:13: struct with 16 pointer bytes could be 8 /Users/shaowenchen/Code/app/dao/gormx/entity/cluster.go:5:14: struct with 128 pointer bytes could be 104 查看 fieldalignment 进行</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Go</category><category>性能优化</category><category>容器</category><category>最佳实践</category></item><item><title>一些程序构建的优化技巧</title><link>https://www.chenshaowen.com/blog/some-tips-for-optimizing-program-building.html</link><pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 28 Sep 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/some-tips-for-optimizing-program-building.html</guid><description>持续更新中&amp;hellip; 1. Golang 使用 trimpath 移除编译路径，避免暴露编译路径信息 1 go build -gcflags=&amp;#34;all=-trimpath=${PWD}&amp;#34; -asmflags=&amp;#34;all=-trimpath=${PWD}&amp;#34; -o ./bin/opscli ./cmd/cli/main.go 添加之前异常输出路径 /Users/shaowenchen/Code/Github/ops/main.go，添加之后异常输出路径 main.go 。 -ldflags &amp;ldquo;-w -s&amp;rdquo; 移除调试信息，减小</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CICD</category><category>DevOps</category><category>最佳实践</category></item></channel></rss>