<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>证书 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E8%AF%81%E4%B9%A6/</link><description>Recent content in 证书 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 10 Jun 2022 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E8%AF%81%E4%B9%A6/atom.xml" rel="self" type="application/rss+xml"/><item><title>如何更新 Kubernetes 证书</title><link>https://www.chenshaowen.com/blog/how-to-renew-kubernetes-certs-manually.html</link><pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate><atom:modified>Fri, 10 Jun 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-renew-kubernetes-certs-manually.html</guid><description>在默认情况下，Kubernetes 的证书每隔一年需要 renew 一次，下面是记录的一次证书更新过程。 1. 查看证书 在 Master 节点上查看证书过期时间: 1 2 3 4 5 6 7 8 9 10 11 12 13 kubeadm certs check-expiration CERTIFICATE EXPIRES RESIDUAL TIME CERTIFICATE AUTHORITY EXTERNALLY MANAGED admin.conf Apr 02, 2023 09:53 UTC 296d no apiserver Apr 02, 2023 09:53 UTC 296d ca no apiserver-kubelet-client Apr 02, 2023 09:53 UTC 296d ca no controller-manager.conf Apr 02, 2023 09:53 UTC</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>证书</category><category>运维</category></item><item><title>如何给 Kubernetes Apiserver 新增访问入口</title><link>https://www.chenshaowen.com/blog/how-to-add-entrance-to-kubernetes-apiserver.html</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><atom:modified>Wed, 08 Sep 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-add-entrance-to-kubernetes-apiserver.html</guid><description>1. 本地怎么访问远程集群 在研发时，需要直接连接远端 Kubernetes 集群。通常的做法是，将 /etc/kubernetes/admin.conf 拷贝到本地 ~/.kube/kubeconfig。 但是 kubeconfig 的 server 地址是 kubernetes.default.svc。因此，我们需要配置一个 hosts: 1 1.1.1.1 kubernetes.default.svc 如果需要在不同集群之间切换</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>研发</category><category>证书</category></item><item><title>Kubernetes 签发 Ingress 证书及日常故障运维</title><link>https://www.chenshaowen.com/blog/kubernetes-ingress-certificates-and-ops.html</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><atom:modified>Thu, 10 Oct 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/kubernetes-ingress-certificates-and-ops.html</guid><description>1. 自动签发 Ingress 证书 安装 cert-manager 1 2 3 4 5 6 7 8 9 10 kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.10/deploy/manifests/00-crds.yaml kubectl create namespace cert-manager kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true helm repo add jetstack https://charts.jetstack.io helm repo update helm install \ --name cert-manager \ --namespace cert-manager \ --version v0.10.0 \ jetstack/cert-manager 创建一个全局的签发机构 新建文件 issuer.yaml 1 2 3 4 5 6 7 8 9 10 11 12 apiVersion: certmanager.k8s.io/v1alpha1 kind: ClusterIssuer metadata: name: letsencrypt-prod namespace: cert-manager spec: acme: server: https://acme-v02.api.letsencrypt.org/directory email: admin@domain.com privateKeySecretRef: name: letsencrypt-prod http01: {} 创建签发机构 1 kubectl apply -f issuer.yaml 签发证书 新建</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>证书</category><category>故障</category><category>Ingress</category></item><item><title>Kubernetes 中的证书</title><link>https://www.chenshaowen.com/blog/certificates-in-kubernetes.html</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><atom:modified>Thu, 26 Sep 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/certificates-in-kubernetes.html</guid><description>我使用的是 Kubernetes 1.15.3 ，不同版本的处理方法可能会有不同。 1. 关于证书 根证书是自签的 根证书是由自己签发的。在浏览器中，内置了常见的证书服务商的 CA 证书。因此，浏览器才会信任这些证书服务商签发的下一级证书。 我们也可以生成根证书，但是需要将根证书添加到系统信</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>证书</category></item></channel></rss>