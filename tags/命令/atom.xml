<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>命令 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E5%91%BD%E4%BB%A4/</link><description>Recent content in 命令 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Wed, 03 Feb 2021 22:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E5%91%BD%E4%BB%A4/atom.xml" rel="self" type="application/rss+xml"/><item><title>命令行 Banner 生成工具 - pyfiglet</title><link>https://www.chenshaowen.com/blog/cli-banner-tool-pyfiglet.html</link><pubDate>Wed, 03 Feb 2021 22:00:00 +0000</pubDate><atom:modified>Wed, 03 Feb 2021 22:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/cli-banner-tool-pyfiglet.html</guid><description>1. 什么是 pyfiglet pyfiglet 是一个用 Python 实现的 ASCII 艺术字生成工具。可以根据字符生成如下图形: 1 2 3 4 5 6 _ _ _ _ _ _ | |__ ___| | | ___ __ _____ _ __| | __| | | | &amp;#39;_ \ / _ \ | |/ _ \ \ \ /\ / / _ \| &amp;#39;__| |/ _` | | | | | | __/ | | (_) | \ V V / (_) | | | | (_| |_| |_| |_|\___|_|_|\___( ) \_/\_/ \___/|_| |_|\__,_(_) |/ 在编写 CLI 工具时，可</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>命令</category><category>前端</category><category>NPM</category></item><item><title>NPM 常用命令</title><link>https://www.chenshaowen.com/blog/common-commands-list-of-npm.html</link><pubDate>Sun, 24 Jun 2018 22:00:00 +0000</pubDate><atom:modified>Sun, 24 Jun 2018 22:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/common-commands-list-of-npm.html</guid><description>** 默认执行命名时，针对的是当前目录环境。如果加上 -g 参数，则表示针对的是全局生效。** npm 升级 1 npm install npm -g 查看当前版本 1 npm -v 查看 npm 源配置 1 npm config get registry 修改 npm 源 1 2 npm config set registry http://registry.npm.taobao.org/ # npm config set registry https://registry.npmjs.org/ 临时指定 npm 安装源 1 npm install [package name] --registry=https://registry.npm.taobao.org 设置 proxy 1 npm config set proxy http://proxy.example.com:8080 查看 proxy 1 npm config get proxy 删除</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>命令</category><category>前端</category><category>NPM</category></item><item><title>Django 开发中常用命令</title><link>https://www.chenshaowen.com/blog/common-commands-in-django-development.html</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><atom:modified>Thu, 22 Mar 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/common-commands-in-django-development.html</guid><description>创建 Django 工程 1 django-admin startproject your_project_name 创建应用 1 2 3 django-admin.py startapp your_app_name # 或者 python manage.py startapp your_app_name python manage.py 和 django-admin 的功能基本一样。不同的是 python manage.py 还设置了 DJANGO_SETTINGS_MODULE 环境变量、将项目的路径加入了 sys.path 中。建议除了创建项目使用 django-admin，其他情况使用 python manage.py。 初始化数据 1 python manage.py migrate 创建缓存表</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Python</category><category>Django</category><category>命令</category></item><item><title>Django 中的 manage 命令</title><link>https://www.chenshaowen.com/blog/manage-command-in-django.html</link><pubDate>Mon, 15 May 2017 21:14:48 +0000</pubDate><atom:modified>Mon, 15 May 2017 21:14:48 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/manage-command-in-django.html</guid><description>每个Django项目中都会自动生成一个manage.py文件。manage.py是对django-admin的一个简单包装，其功能是将Django Project放到sys.path目录中，设置 DJANGO_SETTINGS_MODULE 环境变量为当前Project的setting.</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>Django</category><category>工具</category><category>命令</category></item></channel></rss>