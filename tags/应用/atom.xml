<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>应用 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E5%BA%94%E7%94%A8/</link><description>Recent content in 应用 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Wed, 08 Nov 2023 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E5%BA%94%E7%94%A8/atom.xml" rel="self" type="application/rss+xml"/><item><title>从 CPU 到网络记录一次排查应用慢的过程</title><link>https://www.chenshaowen.com/blog/record-a-troubleshooting-process-for-application-slowness.html</link><pubDate>Wed, 08 Nov 2023 00:00:00 +0000</pubDate><atom:modified>Wed, 08 Nov 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/record-a-troubleshooting-process-for-application-slowness.html</guid><description>1. 现象 业务反馈应用 app-a 的接口慢，查看日志发现是某一个 Pod 慢，删除该 Pod 让其更换节点就好。 从监控指标可以看到，Pod 的 CPU 使用率确实有剧增。 但该 Pod 没有达到 Limit 的限制，没有被限流 CPU。 接着看节点的 CPU 监控，发现节点的 CPU 使用率也有剧增。 并且增加的部分是 System C</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CPU</category><category>网络</category><category>应用</category><category>排查</category><category>故障</category></item><item><title>WebAssembly Serverless 飞入寻常百姓家</title><link>https://www.chenshaowen.com/blog/webassembly-serverless-will-be-a-common-arch-in-the-future.html</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><atom:modified>Tue, 09 May 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/webassembly-serverless-will-be-a-common-arch-in-the-future.html</guid><description>1. 基于容器的 Serverless 无法支撑下一代应用的形态 如上图，我们正经历着一次运行时态的变革。 从裸金属机到虚拟机，应用不在受限于本地服务器的数量、机房稳定性，具有更好的弹性和可用性。 从虚拟机到容器，应用不再受限于操作系统、配置漂移，具有更好的可移植性和可扩</description><dc:creator>微信公众号</dc:creator><category>WebAssembly</category><category>Serverless</category><category>Kubernetes</category><category>应用</category></item><item><title>Kubevela 下的多集群应用</title><link>https://www.chenshaowen.com/blog/multi-cluster-applications-under-kubevela.html</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 17 Sep 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/multi-cluster-applications-under-kubevela.html</guid><description>Kubevela 目前处于 1.1 版本。通常，我们认为 1.x 的版本是相对稳定的，可以尝试引入生产。在不断地跟踪和学习过程中，也感受到 Kubevela 的一些好的地方，这是一篇小结性的文档。 1. Kubevela 能解决什么问题 面向平台开发者 需要区分几个角色: 开发、运维、运维开发。开发面向的是业务需求，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubevela</category><category>Kubernetes</category><category>应用</category></item></channel></rss>