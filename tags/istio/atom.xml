<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Istio on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/istio/</link><description>Recent content in Istio on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sun, 12 Nov 2023 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/istio/atom.xml" rel="self" type="application/rss+xml"/><item><title>Istio 中的 EnvoyFilter 配置</title><link>https://www.chenshaowen.com/blog/configurate-envoyfilter-in-istio.html</link><pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate><atom:modified>Sun, 12 Nov 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/configurate-envoyfilter-in-istio.html</guid><description>1. EnvoyFilter 是什么 EnvoyFilter 是 Istio 的 CRD 资源，它允许用户修改 Envoy 的配置，以满足用户针对不同场景的定制需求。 1 2 3 4 5 6 7 8 9 kubectl get envoyfilter -A NAMESPACE NAME AGE istio-system add-request-id-into-ingressgateway 54d istio-system compression-gzip 18d istio-system custom-access-log 3d istio-system ingressgateway-settings 52d istio-system preserve-request-header-us-test-ingress-gateway 95d istio-system preserve-x-request-id 54d 通常在使用 istio 时，或多或少都会用到一些 EnvoyFilter。 EnvoyFilter 提供的功能是基于 Envoy 已有的内</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Istio</category><category>EnvoyFilter</category><category>配置</category></item><item><title>使用 tinygo 开发 Istio WasmPlugin</title><link>https://www.chenshaowen.com/blog/developing-istio-wasm-plugin-by-tinygo.html</link><pubDate>Wed, 22 Feb 2023 01:00:00 +0000</pubDate><atom:modified>Wed, 22 Feb 2023 01:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-istio-wasm-plugin-by-tinygo.html</guid><description>wasme 只支持到 istio 1.9，而我使用的是 Istio 1.14，因此本篇直接使用 tinygo 进行验证和学习。 1. 安装 tinygo 要求 Go v1.18+ 安装 tinygo 1 2 brew tap tinygo-org/tools brew install tinygo 查看版本 1 2 3 tinygo version tinygo version 0.27.0 darwin/amd64 (using go version go1.19.3 and LLVM version 15.0.0) 2. 创建 wasm-istio 项目 初始化项目 1 2 3 mkdir wasm-istio cd wasm-istio go mod init wasm-istio 编辑 main.go 见 https://github.com/shaowenchen/demo/blob/master/wasm-istio/main.go 主要是下面这段 1 2 3 4 5 6 7</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>tinygo</category><category>Istio</category><category>Wasm</category></item><item><title>Istio 注入 Sidecar 的几种方式</title><link>https://www.chenshaowen.com/blog/several-ways-to%20inject%20Sidecar.html</link><pubDate>Tue, 21 Feb 2023 00:01:00 +0000</pubDate><atom:modified>Tue, 21 Feb 2023 00:01:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/several-ways-to%20inject%20Sidecar.html</guid><description>Istio 注入 Sidecar 的模板在 istio-sidecar-injector ConfigMap 中。通过 annotations 可以对 Sidecar 的各种参数进行自定义配置，比如 CPU 使用、proxyImage 等。下面主要整理的是 Sidecar 的注入方式。 1. 给命名空间添加标签 -&amp;gt; 整个命名空间生效 注入标签 1 kubectl label namespace default istio-injection=enabled --overwrite 重启应用之后，会自动注入 Sidecar 容器。此时，访问流量将通</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Istio</category><category>整理</category><category>事件</category></item><item><title>Istio Gateway 下的几种流量配置路径</title><link>https://www.chenshaowen.com/blog/several-traffic-paths-under-istio-gateway.html</link><pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate><atom:modified>Tue, 21 Feb 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/several-traffic-paths-under-istio-gateway.html</guid><description>1. 常用对象配置 1.1 Gateway selector 选择规则生效的 Envoy servers 匹配的域名 端口 协议 TLS 证书 1.2 VirtualService gateways 指定生效的网关，默认值 mesh 为东西向流量；如果指定 Gateway 对象则为南北向流量 http 七层路由 重定向 重写 重试 条件规则 超时 故障注入 跨站策略 tcp 七层路由 tls 带证书路由 TLS 证书 1.3 DestinationRule host 路由 trafficPolicy 镜像流量 故障转</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Istio</category><category>Gateway</category><category>流量</category></item><item><title>如何在 CentOS 8 下编译 istio 项目</title><link>https://www.chenshaowen.com/blog/how-to-build-istio-under-centos.html</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><atom:modified>Thu, 08 Apr 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-build-istio-under-centos.html</guid><description>本文主要描述在 CentOS 8.2 下，如何使用本地工具编译 https://github.com/istio/istio 项目。另外一种方法是通过 BUILD_WITH_CONTAINER 参数控制，使用容器编译，仅依赖于 make 和 docker。 1. 安装并升级 Ruby &amp;gt;= 2.6 安装 Ruby 1 yum install -y ruby 查看 Ruby 版本 1 2 3 ruby -v ruby 2.5.5p157 (2019-03-15 revision 67260) [x86_64-linux] 安装 RVM 1 2 3 4 yum install -y tar gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB curl -sSL https://get.rvm.io | bash -s stable source /etc/profile.d/rvm.sh 安</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CentOS</category><category>Istio</category></item></channel></rss>