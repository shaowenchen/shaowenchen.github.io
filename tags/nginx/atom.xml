<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Nginx on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/nginx/</link><description>Recent content in Nginx on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Wed, 18 Apr 2018 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/nginx/atom.xml" rel="self" type="application/rss+xml"/><item><title>Nginx 配置问题记录</title><link>https://www.chenshaowen.com/blog/nginx-configuration-problem-record.html</link><pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate><atom:modified>Wed, 18 Apr 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/nginx-configuration-problem-record.html</guid><description>1. server_name 无效 现象：Nginx 反向代理了两个应用，配置详情如下。发现访问 b.chenshaowen.com 和 a.chenshaowen.com 时，返回的都是 A 服务的请求。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 server { listen 80; server_name a.chenshaowen.com; location / { proxy_pass http://A; } } server { listen 8080; server_name b.chenshaowen.com; location / { proxy_pass http://B; } } 原因：当所有 server 的规则都不匹配时，Nginx 会采用第一条</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Nginx</category><category>配置</category></item><item><title>Etcd、Confd 、Nginx 服务发现</title><link>https://www.chenshaowen.com/blog/service-discovery-etcd-confd-nginx.html</link><pubDate>Thu, 08 Feb 2018 14:51:16 +0000</pubDate><atom:modified>Thu, 08 Feb 2018 14:51:16 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/service-discovery-etcd-confd-nginx.html</guid><description>本篇主要阐述了为什么需要服务发现功能，对几种服务发现工具进行了比较。同时，在 CentOS 上，对 Etcd、Confd 、Nginx 实现服务发现功能进行了实践。 1. 服务注册与发现 1.1 为什么需要注册和发现服务 随着微服务的兴起，大量接口服务化。当新的微服务加入或微</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>工具</category><category>微服务</category><category>Etcd</category><category>Confd</category><category>Nginx</category><category>服务发现</category></item><item><title>从零开始使用 Docker 打包 Django 开发环境 (5) Nginx</title><link>https://www.chenshaowen.com/blog/how-to-package-django-development-environments-using-docker-5.html</link><pubDate>Sun, 24 Sep 2017 14:34:35 +0000</pubDate><atom:modified>Sun, 24 Sep 2017 14:34:35 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-package-django-development-environments-using-docker-5.html</guid><description>1. 目录结构 1 2 3 4 5 6 7 8 9 10 11 12 ├── django-devops-nginx │ ├── Dockerfile │ └── nginx.repo ├── django-devops-compose │ ├── docker-compose.yml │ ├── www │ ├── conf │ │ ├── nginx.conf │ ├── log │ │ ├── nginx │ │ │ ├── access.log │ │ │ ├── error.log 每个服务的镜像 Dockerfile，单独放在一个文件夹。django-devo</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Docker</category><category>服务</category><category>工具</category><category>Django</category><category>Nginx</category></item><item><title>Nginx开启HTTP/2</title><link>https://www.chenshaowen.com/blog/nginx-open-http2.html</link><pubDate>Thu, 23 Jun 2016 21:20:17 +0000</pubDate><atom:modified>Thu, 23 Jun 2016 21:20:17 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/nginx-open-http2.html</guid><description>本文主要介绍了在Linux上如何通过编译安装Nginx，并开启htttp2，还对使用http1.1和http2.0协议的访问本站的速度进行了比较。 1. 编译安装 Nginx 首先需要下载Nginx和它的几个依赖包。Zlib，Web请求传输时对数据进行压缩，</description><dc:creator>微信公众号</dc:creator><category>Nginx</category><category>HTTP/2</category><category>博文</category></item></channel></rss>