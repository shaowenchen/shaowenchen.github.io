<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>集群 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E9%9B%86%E7%BE%A4/</link><description>Recent content in 集群 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 09 Feb 2023 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E9%9B%86%E7%BE%A4/atom.xml" rel="self" type="application/rss+xml"/><item><title>使用集群内 Prometheus 采集 Etcd 指标</title><link>https://www.chenshaowen.com/blog/using-prometheus-in-the-cluster-to-collect-etcd-metrics.html</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 09 Feb 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-prometheus-in-the-cluster-to-collect-etcd-metrics.html</guid><description>1. 跳过证书校验无法获取监控 如果指标抓取时，能跳过 TLS 认证是最便捷的。其 Prometheus 的 ConfigMap 配置如下: 1 2 3 4 5 6 7 8 9 - job_name: etcd metrics_path: /metrics scheme: https tls_config: insecure_skip_verify: true static_configs: - targets: [ &amp;#39;1.1.1.1:2379&amp;#39; ] - targets: [ &amp;#39;2.2.2.2:2379&amp;#39; ] - targets: [ &amp;#39;3.3.3.3:2379&amp;#39; ] 但 Prometheus Targets 报错 Get &amp;quot;https://3.3.3.3:2379/metrics&amp;quot;: remote error: tls: bad certificate 在 targets 页面的报错如下图: 2. curl 验证抓取请求 跳过证书 1 2 3 curl https://1.1.1.1:2379/metrics -k curl: (35)</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Etcd</category><category>集群</category><category>Prometheus</category><category>监控</category></item><item><title>集群节点的弹性扩缩</title><link>https://www.chenshaowen.com/blog/auto-add-or-remove-nodes-incluster.html</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><atom:modified>Mon, 16 Jan 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/auto-add-or-remove-nodes-incluster.html</guid><description>弹性伸缩主要有三个维度： HPA，根据利用率，自动伸缩 Pod 数量 VPA，根据历史数据，自动设置 Pod 的 Request、Limit CA，根据使用率，自动伸缩 Node 数量 本篇主要讨论的是节点扩缩容部分。 1. 自动扩缩容组件 autoscaler autoscaler 是 Kubernetes 社区维护的项目。目前 autoscaler 组件已经提供</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>集群</category><category>弹性</category><category>节点</category></item></channel></rss>