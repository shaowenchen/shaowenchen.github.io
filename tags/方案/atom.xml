<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>方案 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E6%96%B9%E6%A1%88/</link><description>Recent content in 方案 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 17 Sep 2020 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E6%96%B9%E6%A1%88/atom.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes 平台管理软件压力测试方案</title><link>https://www.chenshaowen.com/blog/stress-testing-plan-of-kubernetes-platform-management-software.html</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><atom:modified>Thu, 17 Sep 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/stress-testing-plan-of-kubernetes-platform-management-software.html</guid><description>Kubernetes 平台管理软件运行在 Kubernetes ，用于管理运行在 Kubernetes 上的资源对象。 1. 测试思路 测试在一定负载一定集群规模下，平台软件的管理能力，而不是 Kubernetes 的管理能力。平台软件的管理能力主要体现在能通过 UI 对负载、PV 进行增删改查，在 UI 上能够直接查看负载的监控和日志。 明确测试</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>压力测试</category><category>方案</category><category>Etcd</category><category>负载</category></item><item><title>如何一步一步地优化博客方案</title><link>https://www.chenshaowen.com/blog/how-to-optimize-the-blog-solution-step-by-step.html</link><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate><atom:modified>Sun, 21 Jul 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-optimize-the-blog-solution-step-by-step.html</guid><description>从最开始写博客至今，已经过去四、五年。我写博客的初衷是记录、思考、整理，给自己看更多一点，如果能帮上其他人就更好了。从最开始的 csdn ，到使用 Ghost 在 Linode 部署，再到 Pages 托管，最后落脚在 CDN 上。起初是为了能专心写，而后是希望通过一个网站了解更多技术细节，最后</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>方案</category></item><item><title>运营埋点与方案设计</title><link>https://www.chenshaowen.com/blog/operation-buried-point-and-design.html</link><pubDate>Fri, 21 Jul 2017 13:34:15 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 13:34:15 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/operation-buried-point-and-design.html</guid><description>1. 名词解释 xpath ： 分为精确路径和概略路径两种做法。精确路径 ： body&amp;gt;div[0]&amp;gt;div[3]&amp;gt;ul&amp;gt;li[5]&amp;gt;a[0] ，从被点击的元素不断向上查找到根节点，并记录过程中每个节点。概略路径：body&amp;gt;div.header&amp;gt;div.nav&amp;gt;a[23]，在前者的基础上省略上溯路径中非白名</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>设计</category><category>方案</category><category>Demo</category></item><item><title>Haystack 全文检索</title><link>https://www.chenshaowen.com/blog/haystack-full-text-search.html</link><pubDate>Fri, 21 Jul 2017 13:00:03 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 13:00:03 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/haystack-full-text-search.html</guid><description>简单介绍一下项目需求: 项目组需要对外发布文档，文档撰写使用的是Markdown，对外需要使用HTML。起初，使用的是Nginx+Jekyll的解决方案。随着文档的增加，文档系统对搜索功能有了强烈的需求。笔者在另外一篇文章中有所讨论，但是这几</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>数据</category><category>方案</category><category>检索</category></item><item><title>Jekyll 搜索方案</title><link>https://www.chenshaowen.com/blog/jekyll-search-option.html</link><pubDate>Thu, 13 Jul 2017 19:24:52 +0000</pubDate><atom:modified>Thu, 13 Jul 2017 19:24:52 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/jekyll-search-option.html</guid><description>简介：Jekyll是一套静态HTML生成工具。文档系统利用Jekyll进行部署，最终将Markdown转换为HTML文件输出。 搜索功能的需求是，根据关键字，匹配文档的标题或者内容，列出匹配的文档列表。 1. 方案一： Simple-Jekyll-Search 参考地址：https://g</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Jekyll</category><category>方案</category><category>数据</category></item></channel></rss>