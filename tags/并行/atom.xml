<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>并行 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E5%B9%B6%E8%A1%8C/</link><description>Recent content in 并行 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 03 Sep 2020 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E5%B9%B6%E8%A1%8C/atom.xml" rel="self" type="application/rss+xml"/><item><title>一起来学 Go --（5）Goroutine 和 Channel</title><link>https://www.chenshaowen.com/blog/let-us-start-learning-go-5.html</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><atom:modified>Thu, 03 Sep 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/let-us-start-learning-go-5.html</guid><description>1. Go 中的并发模型 1.1 通信模型 CSP CSP 全称 Communicating Sequential Process ，通信顺序进程，描述的是一种并发通信模型。Process 可以使用很多个 Channel ，而 Channel 不关心谁在使用它，只负责收发数据。 Go 社区中，有一句非常著名的论断: 不要通过共享内存来通信，要通过通信来共享内存。意思是，不</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Go</category><category>并发</category><category>并行</category><category>Goroutine</category><category>Channel</category><category>学习</category><category>一起来学Go</category></item></channel></rss>