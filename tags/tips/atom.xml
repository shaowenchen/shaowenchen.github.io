<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Tips on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/tips/</link><description>Recent content in Tips on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 14 May 2020 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/tips/atom.xml" rel="self" type="application/rss+xml"/><item><title>进阶的 curl 用法</title><link>https://www.chenshaowen.com/blog/the-advanced-usage-of-curl.html</link><pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate><atom:modified>Thu, 14 May 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-advanced-usage-of-curl.html</guid><description>1. Restful 请求 1 curl -X POST --data &amp;#39;keyword=value&amp;#39; http://domain.com/mypath/ -X 后面还可以是 DELETE PUT 等。 2. 添加头部 1 curl -H &amp;#39;Content-Type:application/json&amp;#39; -H &amp;#39;Authorization: bearer MyToken&amp;#39; http://domain.com/mypath/ 3. Basic 验证访问 1 curl -u username:password http://domain.com/mypath/ 4. 下载并执行 curl -sSL http://domain.com/my.sh | bash 5. 忽略证书校验 1 curl -k https://domain.com/mypath/ 6. 设置代理 1 curl -x socks5://proxyuser:proxypassword@proxy.domain.com:8001 https://domain.com/mypath/ 7. 指定 Host 使用 IP 访问 1 curl -H &amp;#39;Host: www.domain.com&amp;#39; 1.2.3.4:8000</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category></item><item><title>Surface 触控笔失灵</title><link>https://www.chenshaowen.com/blog/surface-pen-lose-feeling.html</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><atom:modified>Mon, 11 May 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/surface-pen-lose-feeling.html</guid><description>最近用 Surface ，找出触控笔发现没电。换了一个 AAAA 电池，又发现笔尖触控失效。 网上很多文档介绍的是卸载 Marvell AVASTAR Bluetooth ，重启生效。但这种方法对我无效，卸载 Precise Touch Device 之后反而生效。 在设备管理里面找到下图选项，右键卸载，不用勾选删除，直接确定，然后重启生效。</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Surface</category></item><item><title>你不知道的 Docker 使用技巧</title><link>https://www.chenshaowen.com/blog/docker-skills-you-do-not-notice.html</link><pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate><atom:modified>Wed, 18 Mar 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/docker-skills-you-do-not-notice.html</guid><description>1. 分阶段构建 编译项目需要借助一系列特定的工具，但在运行阶段并不需要这些工具。为了减小镜像体积，可以分阶段构建。在第一阶段进行构建，然后将编译生成的文件传入下一个阶段，生成更小体积的镜像。 1 2 3 4 5 6 7 8 9 10 11 FROM golang:1.12 as builder COPY / /go/src/github.com/shaowenchen/goproject WORKDIR /go/src/github.com/shaowenchen/goproject RUN CGO_ENABLED=0 GO111MODULE=on GOOS=linux GOARCH=amd64 GOFLAGS=-mod=vendor go</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Docker</category><category>Tips</category></item><item><title>如何清空 Git 仓库全部历史记录</title><link>https://www.chenshaowen.com/blog/how-to-clear-commit-history-of-git.html</link><pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate><atom:modified>Thu, 20 Feb 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-clear-commit-history-of-git.html</guid><description>这里以清空 main 历史提交记录为例。 切换到 main 分支 1 git checkout main 创建一个干净的分支 1 git checkout --orphan new_main 提交全部文件 1 2 git add -A git commit -m &amp;#34;msg&amp;#34; 删除 main 分支 1 git branch -D main 将新分支重命名为 main 1 git branch -m main 强制推动到远程仓库 1 git push -f origin main</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category></item><item><title>开发 Tips（19）</title><link>https://www.chenshaowen.com/blog/developing-tips-19.html</link><pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate><atom:modified>Fri, 10 Jan 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-19.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. macOS 快速切换不同 Kubernetes 环境 涉及 Kubernetes 相关开发时，经常需要在多个集群之间切换。配置多集群 context 是一个选择，但是如果集群在不断重置，可以试下如下方法： 在 ~/.profile 文件中定义一系列相关 function，切换时只需要执行 on_cluster_name 即可</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Kubernetes</category><category>环境</category><category>Docker</category></item><item><title>开发 Tips（18）</title><link>https://www.chenshaowen.com/blog/developing-tips-18.html</link><pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate><atom:modified>Sun, 22 Dec 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-18.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Azure 镜像代理 在国内的服务器上，拉取某些镜像速度较慢，或根本就无法拉取。Azure 提供了容器仓库的镜像代理服务。 无法拉取的镜像源 替换之后的镜像源 k8s.gcr.io gcr.azk8s.cn/google_containers docker.io dockerhub.azk8s.cn gcr.io gcr.azk8s.cn quay.io quay.azk8s.cn 2. watch 命令 watch 命令可以周期性地执行指定的命令</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>镜像</category><category>字体</category><category>VSCode</category></item><item><title>如何构建一个 Java 工程</title><link>https://www.chenshaowen.com/blog/how-to-compile-a-java-project.html</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 20 Dec 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-compile-a-java-project.html</guid><description>首先，编译器需要将 .java 文本文件编译为 .class 字节码，然后 JVM 执行 .class 字节码文件。流程并不复杂，本文主要记录一些在编译、运行时的相关过程。 1. 单个文件源代码 新建文本文件 Hello.java 1 2 3 4 5 public class Hello { public static void main(String[] args) { System.out.println(&amp;#34;Hello, world!&amp;#34;); } } 编译源码 1 javac Hello.java 执行字节码 1 java Hello 2. 多个源码文件 使用</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category></item><item><title>开发 Tips（17）</title><link>https://www.chenshaowen.com/blog/developing-tips-17.html</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate><atom:modified>Thu, 19 Dec 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-17.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. 重启 Kubernetes 中的 Job 任务 1 kubectl -n {NAMESPACE} get job {JOB_NAME} -o json | jq &amp;#39;del(.spec.selector)&amp;#39; | jq &amp;#39;del(.spec.template.metadata.labels)&amp;#39; | kubectl replace --force -f - 如果提示没有找到 jq 命令，需要先按照 jq ，yum install -y jq。 2. DNS 的 SPF 记录 在发送邮件时，由于发件人可以任意指定，收件人无法验证发件人是否真实。SP</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category></item><item><title>开发 Tips（16）</title><link>https://www.chenshaowen.com/blog/developing-tips-16.html</link><pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate><atom:modified>Wed, 27 Nov 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-16.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Kubernetes 服务仅在负载节点可用 正常情况下 NodePort 类型的 Service ，任意 Node 节点 IP + 端口，都可以访问。但是，也有可能仅负载的 Node 节点 IP + 端口可以访问。 首先，可以尝试配置转发相关参数: 1 2 3 4 5 6 cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward=1 vm.swappiness=0 EOF 1 sysctl</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Kubernetes</category></item><item><title>开发 Tips（15）</title><link>https://www.chenshaowen.com/blog/developing-tips-15.html</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><atom:modified>Wed, 11 Sep 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-15.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Ingress 开启 HTTPS 准备好证书，domain.com.crt、domain.com.key 创建 Secret 1 kubectl create secret tls {SECRET_NAME} --key domain.com.key --cert domain.com.crt -n {NAMESPACE} 更新 Ingress 配置 1 2 3 4 5 spec: tls: - hosts: - domain.com secretName: {SECRET_NAME} 2. SSH 登陆失败，提示 ssh-dss SSH 登陆提示: 1 Unable to negotiate with 10.10.10.10 port 22: no matching</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Kubernetes</category><category>Ingress</category></item><item><title>开发 Tips（14）</title><link>https://www.chenshaowen.com/blog/developing-tips-14.html</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 06 Sep 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-14.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Kubernetes 集群添加新的 Node 节点 在执行 kubeadm init 时，Console 会打印添加 Node 的命令。Token 默认的有效期为 24h 。当超过有效期时，需要重新创建 Token ，执行命令： 1 2 kubeadm token create --print-join-command kubeadm join 192.168.10.2:6443 --token ocyzce.3hv8y7w60lrvulir --discovery-token-ca-cert-hash sha256:7a86632f54de1004bb3f38124b663f837399d6ba9aa803d58c6707a76c02a6cb 使用 Console 输出的命令，即可将 Node 节点添</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Kubernetes</category><category>CentOS</category><category>Tcpdump</category></item><item><title>开发 Tips（13）</title><link>https://www.chenshaowen.com/blog/developing-tips-13.html</link><pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate><atom:modified>Tue, 27 Aug 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-13.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. NodePort 服务仅指定 Node 可以访问 通过 NodePort 暴露的服务，在集群外可以使用 Kubernetes 任意 Node IP 加端口的形式访问。kube-proxy 会将访问流量以轮询的方式转发给 service 中的每个 Pod。 但是，发现并不是每一个 Node IP 加端口都可以访问，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>NodePort</category><category>Kubernetes</category><category>StorageClass</category><category>存储</category></item><item><title>开发 Tips（12）</title><link>https://www.chenshaowen.com/blog/developing-tips-12.html</link><pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 23 Aug 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-12.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Kubernetes 中给 Node 增加 Role: worker 1 2 3 4 kubectl get nodes NAME STATUS ROLES AGE VERSION i-6fns0nua Ready master 6d3h v1.15.2 i-m69skuyd Ready &amp;lt;none&amp;gt; 6d2h v1.15.2 1 2 kubectl label node i-m69skuyd node-role.kubernetes.io/worker= node/i-m69skuyd labeled 1 2 3 4 kubectl get node NAME STATUS ROLES AGE VERSION i-6fns0nua Ready master 6d3h v1.15.2 i-m69skuyd Ready worker 6d2h v1.15.2 2. 删除 Kubernetes 的一个节点 查看当前节点： 1 2 3 4 kubectl get node NAME STATUS ROLES AGE VERSION i-6fns0nua Ready master 6d3h v1.15.2 i-m69skuyd Ready worker 6d2h</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Kubernetes</category></item><item><title>开发 Tips（11）</title><link>https://www.chenshaowen.com/blog/developing-tips-11.html</link><pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate><atom:modified>Thu, 22 Aug 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-11.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. 打开 OS X 原生 NTFS 支持 插上磁盘，查看盘符 1 2 3 4 5 6 diskutil list diskutil list /dev/disk2 (external, physical): #: TYPE NAME SIZE IDENTIFIER 0: FDisk_partition_scheme *96.9 GB disk2 1: Windows_NTFS SSD 96.8 GB disk2s1 这里的 SSD 就是 Volume Name。 更新 /etc/fstab文件 1 sudo nano /etc/fstab 输入密码，然后输入 LABEL=SSD none ntfs rw,auto,n</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>NTFS</category><category>Kubectl</category><category>Helm</category></item><item><title>开发 Tips（10）</title><link>https://www.chenshaowen.com/blog/developing-tips-10.html</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 02 Aug 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-10.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. VS Code 终端执行 .bash_profile 初始化脚本 通过添加启动命令参数，可以使得打开 shell 时，执行初始化脚本 .bash_profile 。 编辑 settings.json，以 OS X 为例，新增如下内容即可： 1 2 3 { &amp;#34;terminal.integrated.shellArgs.osx&amp;#34;: [&amp;#34;-l&amp;#34;] } 2. VS Code 配置 zsh 后，图标无法显示 由于安装补</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Go</category><category>VSCode</category></item><item><title>开发 Tips（9）</title><link>https://www.chenshaowen.com/blog/developing-tips-9.html</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 12 Jul 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-9.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. pandoc 简单使用技巧 Pandoc 是由 John MacFarlane 开发的标记语言转换工具，可实现不同标记语言间的格式转换，堪称该领域中的 “瑞士军刀”。 Pandoc 使用 Haskell 语言编写，以命令行形式实现与用户的交互，可支持多种操作系统。 下载地址: https://github.com/jgm/pandoc/releases/ 。 Pandoc 的基</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Pandoc</category><category>Tmux</category><category>硬盘</category></item><item><title>开发 Tips（8）</title><link>https://www.chenshaowen.com/blog/developing-tips-8.html</link><pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 22 Mar 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-8.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Linux 下设置 Git 访问凭证 Windows 或 OS X 上有 keychain 工具管理账户凭证，在 Linux 系统上使用 Http/Https 协议访问 Git 仓库时，每次都需要输入账户密码。通过下面的配置，可以省略这一过程。 新建凭证文件 1 touch ~/.git-credentials 编辑文件，添加凭证信息 1 https://{username}:{password}@git-domain.com 使凭证生效</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category></item><item><title>开发 Tips（7）</title><link>https://www.chenshaowen.com/blog/developing-tips-7.html</link><pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate><atom:modified>Sun, 24 Feb 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-7.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python2 和 Python3 中的异常处理 Python2，Python3 都支持的两种方式： 带参数 1 2 except （ExceptionType） as Argument: # 访问 Argument 不带参数 1 except ExceptionType： 仅 Python2 支持的方式： 1 2 except ExceptionType, Argument: # 访问 Argument 2.</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>Django</category></item><item><title>开发 Tips（6）</title><link>https://www.chenshaowen.com/blog/developing-tips-6.html</link><pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 14 Dec 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-6.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python3 连接数据库 Python3 主要有两个数据库连接客户端: mysqlclient 和 PyMySQL 。 mysqlclient 是由 C 语言实现的 PyMySQL 是由 Python 实现的 在性能上， mysqlclient 比 PyMySQL 高一个数量级。但，在 PyPy 下，PyMySQL 与 mysqlclient 性能相差不大。 如果需要使用 gevent 或 eventlet 的 monkeypatched 处理 socket，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>MySQL</category><category>Git</category></item><item><title>开发 Tips（5）</title><link>https://www.chenshaowen.com/blog/developing-tips-5.html</link><pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Sat, 24 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-5.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python 内存分析方法 主要涉及四个工具： memory_profile：分析每一行代码的内存使用量 objgraph：跟踪内存中的对象的关系 guppy：在运行时跟踪堆的使用情况 pyrasite：向进程中注入代</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>Docker</category><category>CentOS</category><category>性能</category></item><item><title>开发 Tips（4）</title><link>https://www.chenshaowen.com/blog/developing-tips-4.html</link><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Sun, 11 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-4.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. WhiteNoise 转发静态文件 Django 内置的静态文件服务器效率很低，而 WhiteNoise 是一个不错的替代品。具有如下特点： 通常用于 PaaS 服务 支持 wsgi 应用程序，针对 Django 进行了特殊适配 配合 CDN 使用，更佳 在 Gunicorn 配合下，使用 sendfile 系统调用，处理效率非常高 相比</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>文件</category><category>Django</category><category>CentOS</category><category>Docker</category></item><item><title>开发 Tips（3）</title><link>https://www.chenshaowen.com/blog/developing-tips-3.html</link><pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 02 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-3.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python 的日志模块 Python 的 logging 模块主要由四个部分组成： Loggers: 可供程序直接调用的接口 Handlers: 将日志记录输出至合适的位置 Filters: 提供更细粒度的日志是否输出判断 Formatters: 定制最终记录打印的布局格式 看下面这个例子，log1.py 文件 1 2 3 4</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>编码</category></item><item><title>开发 Tips（2）</title><link>https://www.chenshaowen.com/blog/developing-tips-2.html</link><pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 26 Oct 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-2.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python 中的序列化与反序列化 序列化，将内存对象转化为可存储或传输序列的过程。反序列化，把序列化序列重新转化为内存对象的过程。Json 和 Pickle 是 Python 中常用的两个序列化处理模块。 Json VS Pickle: Json 实现的是内存对象与 Json 字符串</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category></item><item><title>安装 Centos 之后，需要做的几件事</title><link>https://www.chenshaowen.com/blog/after-install-centos.html</link><pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate><atom:modified>Sun, 21 Oct 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/after-install-centos.html</guid><description>1. 更换镜像源 首先备份官方的源 1 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 下载新的源到 /etc/yum.repos.d/ CentOS 5 1 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo CentOS 6 1 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo CentOS 7 1 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 生成元数据缓存 1 yum makecache 2. 访问 NTFS 文件系统 Linux 内核目前只支持对微软 NTFS 文件系统的读取。 ntfs-3g 是微软 NTFS 文件系统的一个开源实现，同时支持读和写。 ntfs-3g 在 epel-release 源中，执行命令查</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>CentOS</category></item><item><title>开发 Tips（1）</title><link>https://www.chenshaowen.com/blog/developing-tips-1.html</link><pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 19 Oct 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-1.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. warning: LF will be replaced by CRLF Windows、Linux 和 Mac 在处理文件换行时，标示符是不一致的。Windows 使用 CRLF 作为结束符，而 Linux 和 Mac 使用 LF 作为结束符。 对待换行符，Git 有两种模式。查看 Git 配置。 1 git config core.autocrlf 如果显示</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>研发</category></item></channel></rss>