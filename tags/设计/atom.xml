<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>设计 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E8%AE%BE%E8%AE%A1/</link><description>Recent content in 设计 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Mon, 25 Apr 2022 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E8%AE%BE%E8%AE%A1/atom.xml" rel="self" type="application/rss+xml"/><item><title>运维与业务的系统设计差异</title><link>https://www.chenshaowen.com/blog/the-differences-between-ops-and-business-while-designing-the-system.html</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><atom:modified>Mon, 25 Apr 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-differences-between-ops-and-business-while-designing-the-system.html</guid><description>1. 通信协议的选择 运维系统更适合 HTTP 而非 gRpc 。 熟悉 HTTP 的运维、研发人员比其他协议的人多。在掌握 HTTP 协议的基础上，学习 Restful 风格的 HTTP API 很快。更多人熟悉、更易于学习，意味着更好沟通、更低的交接成本，因为他们有着更多共同的领域背景。 支持 HTTP 调试的工具非常多。无论</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>设计</category><category>思考</category><category>运维</category><category>系统</category></item><item><title>如何使用 Django Signal 解耦模块</title><link>https://www.chenshaowen.com/blog/how-to-use-django-signal-decoupling-module.html</link><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 12 Oct 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-use-django-signal-decoupling-module.html</guid><description>最近，我负责开发一个重后端的应用。这个应用数据流向复杂，处理逻辑冗余堆积。项目技术栈选择的是 Django + Vuejs。前端使用 Webpack 打包，模块化管理，主要是展示数据。后端涉及的模块多，处理规则多，数据表多，每次涉及之前功能修改时，都消耗大量时间 review 代码。这</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>设计</category><category>解耦</category><category>Demo</category></item><item><title>Django Model 与 E-R 图</title><link>https://www.chenshaowen.com/blog/django-model-and-er-diagram.html</link><pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 02 Mar 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-model-and-er-diagram.html</guid><description>在需求逐步确认的过程中，系统的 DB 模型也逐步确认。有时使用，MySQL Workbench 这类工具绘制 E-R 图，然后生成 MySQL 数据库表，这时就需要反向生成 Django Models；有时直接写 Django Models ，但是又需要查看 E-R 图。本文主要解决上面两个需求，实现 Django Models 与 E-R 图之间的转换。 1. 生成 model 的</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>数据库</category><category>设计</category><category>Model</category></item><item><title>运营埋点与方案设计</title><link>https://www.chenshaowen.com/blog/operation-buried-point-and-design.html</link><pubDate>Fri, 21 Jul 2017 13:34:15 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 13:34:15 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/operation-buried-point-and-design.html</guid><description>1. 名词解释 xpath ： 分为精确路径和概略路径两种做法。精确路径 ： body&amp;gt;div[0]&amp;gt;div[3]&amp;gt;ul&amp;gt;li[5]&amp;gt;a[0] ，从被点击的元素不断向上查找到根节点，并记录过程中每个节点。概略路径：body&amp;gt;div.header&amp;gt;div.nav&amp;gt;a[23]，在前者的基础上省略上溯路径中非白名</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>设计</category><category>方案</category><category>Demo</category></item><item><title>用 Jekyll 搭建文档系统</title><link>https://www.chenshaowen.com/blog/how-to-develop-document-system-using-jekyll.html</link><pubDate>Sat, 17 Jun 2017 00:02:01 +0000</pubDate><atom:modified>Sat, 17 Jun 2017 00:02:01 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-develop-document-system-using-jekyll.html</guid><description>技术输出型公司，一套优秀的文档管理、发布系统必不可少。文档系统是内容管理系统的一种，其对可访问性要求高、单文档更新频率低、发布频率高。笔者认为，以纯静态HTML对外发布文档是个不错的选择。但是，直接写HTML文档，费时费力、不好维护。能不能</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Demo</category><category>设计</category></item><item><title>大型网站技术架构</title><link>https://www.chenshaowen.com/blog/book/large-web-technology-architecture.html</link><pubDate>Thu, 04 May 2017 21:39:11 +0000</pubDate><atom:modified>Thu, 04 May 2017 21:39:11 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/book/large-web-technology-architecture.html</guid><description>副标题: 核心原理与案例分析 作者: 李智慧 出版社: 电子工业出版社 出版年: 2013-9-1 ISBN: 9787121212000 Notes: 没有业务对技术的需求，培养不出优秀的架构师。 作者是伴随着淘宝业务增长，一起成长起来的。 书中主要从系统性能，可用性，伸缩性，扩展性，安全性几个方面阐述网站架构技术要点</description><dc:creator>微信公众号</dc:creator><category>书籍</category><category>架构</category><category>设计</category></item></channel></rss>