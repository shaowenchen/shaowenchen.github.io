<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>GoModules on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/gomodules/</link><description>Recent content in GoModules on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Tue, 23 Jul 2019 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/gomodules/atom.xml" rel="self" type="application/rss+xml"/><item><title>一起来学 Go --（3）Go Modules</title><link>https://www.chenshaowen.com/blog/let-us-start-learning-go-3.html</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><atom:modified>Tue, 23 Jul 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/let-us-start-learning-go-3.html</guid><description>1. Go 的包管理机制 1.1 GOPATH GOPATH 通过 go get 命令，拉取代码放到 GOPATH 目录中。 GOPATH 的问题是： 不能进行包版本的管理 使用全局仓库，不能有效进行隔离 1.2 Vendor 1.5 版本开始，Go 中加入了 Vendor 机制。Vendor 解决了 GOPATH 的部分问题。 Vendor 机制通过在项目目录下增加 vendor 文件夹，管理依赖包。 Vendor 的</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Go</category><category>GoModules</category><category>一起来学Go</category></item></channel></rss>