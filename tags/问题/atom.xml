<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>问题 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E9%97%AE%E9%A2%98/</link><description>Recent content in 问题 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 04 Aug 2023 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E9%97%AE%E9%A2%98/atom.xml" rel="self" type="application/rss+xml"/><item><title>使用 Apline 镜像常见问题</title><link>https://www.chenshaowen.com/blog/common-problems-using-apline.html</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><atom:modified>Fri, 04 Aug 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/common-problems-using-apline.html</guid><description>1. DNS 请求超时 原因: alpine 使用的是 musl 库，在 DNS 解析上会有一些限制[1] 解决方式： 不使用 apline 镜像，并在容器 resolv.conf 文件中增加 options single-request-reopen 配置。因为 single-request-reopen 配置项只对 glibc 库生效，但是 apline 镜像使用的是 musl 库 2. Docker 下无法解析 hosts 原因: alpine 没有 /etc/nsswitch.conf，导致依赖 hosts</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>镜像</category><category>问题</category></item><item><title>Jenkins 中 Lightweight 拉取代码问题分析</title><link>https://www.chenshaowen.com/blog/the-question-of-lightweight-checkout-in-jenkins.html</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><atom:modified>Mon, 22 Jun 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-question-of-lightweight-checkout-in-jenkins.html</guid><description>1. 遇到了什么问题 Jenkins 执行日志报错： 1 2 3 4 5 6 Started by user admin Lightweight checkout support not available, falling back to full checkout. Checking out git https://github.com/shaowenchen/pipeline-test.git into /var/jenkins_home/workspace/abc@script to read Jenkinsfile ... ... Unable to access &amp;#39;.git/index.lock&amp;#39;: File exists. 原因分析： 简单介绍一下 Jenkins 的部署情况，Jenkins 使用 Helm Chart 部署在 Kubernetes，使用 Kubernetes 动态 Pod 进行构建。Jenkins 的 /var/jenkins_home 挂载到 PV</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Jenkins</category><category>Git</category><category>DevOps</category><category>问题</category></item><item><title>Jenkins 中 Git 操作 not a tree 分析</title><link>https://www.chenshaowen.com/blog/git-reference-not-a-tree-in-jenkins.html</link><pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate><atom:modified>Sun, 17 May 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/git-reference-not-a-tree-in-jenkins.html</guid><description>1. 问题描述 配置 Webhook 自动触发执行 Jenkins 流水线时，报错： 1 2 3 hudson.plugins.git.GitException: Command &amp;#34;git checkout -f 23b446ea&amp;#34; returned status code 128: stdout: stderr: fatal: reference is not a tree: 23b446ea 2. Git 如何管理版本 Git 是一个内容寻址文件系统。Git 维护着一棵 sha tree ，通过 sha 值可以回溯到任何一个历史节点。先看看提交记录： 执行命令： 1 2 3 4 5 6 7 8 9 10 11 12</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>问题</category><category>Jenkins</category><category>DevOps</category><category>Git</category></item><item><title>Celery 处理大文件失败问题排查与解决</title><link>https://www.chenshaowen.com/blog/solving-the-problem-of-celery-processe-large-file-failure.html</link><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><atom:modified>Wed, 24 Oct 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/solving-the-problem-of-celery-processe-large-file-failure.html</guid><description>1. 一个小需求 经常遇到一些小的需求，但是实现起来并不简单。这里就有一个文件上传的简单需求，分为下面几个步骤： 用户在页面上传一个大文件 大文件会被暂存在内网的 Ceph 后台任务，将 Ceph 中的大文件，下载到 Docker 内 后台任务，将 Docker 中的大文件，上传到外网的 COS 后台使用的</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Celery</category><category>故障</category><category>排查</category><category>大文件</category><category>问题</category></item><item><title>Windows 7 下 Docker 使用问题</title><link>https://www.chenshaowen.com/blog/some-tips-under-windows7-using-docker.html</link><pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 21 Sep 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/some-tips-under-windows7-using-docker.html</guid><description>1. 自定义 docker-machine 位置 Windows 7 下使用 docker ，默认将 docker-machine 存放在 C:\users\your name\.docker\machine\machines 目录。 为了不占用系统盘存储空间，可以通过如下方法修改： 如果还没有创建虚拟机，可以通过设置 MACHINE_STORAGE_PATH 环境变量指定。 然后，运行 Docker Quickstart Termina，创建运行 docker-machine。 如果已经创建虚拟机，则</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Docker</category><category>Windows</category><category>问题</category></item><item><title>怎么样提一个好问题</title><link>https://www.chenshaowen.com/blog/how-to-raise-a-good-question.html</link><pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate><atom:modified>Sat, 07 Jul 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-raise-a-good-question.html</guid><description>1. 提问的动机 提问的动机分为两种，被动型、主动型。 2 被动型 被动型的提问，是当你遇到问题之后，寻找问题的解法而不得时，被迫的行为。 2.1 尝试自己解决 遇到问题时，不要着急问别人。在时间允许的情况下，尝试自己解决。 一方面，可以锻炼自己分析问题和解决问题</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>思考</category><category>问题</category></item></channel></rss>