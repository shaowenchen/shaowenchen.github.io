<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>CloudNative on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/cloudnative/</link><description>Recent content in CloudNative on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Wed, 19 May 2021 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/cloudnative/atom.xml" rel="self" type="application/rss+xml"/><item><title>一个通用流水线设计</title><link>https://www.chenshaowen.com/blog/a-universal-design-for-pipeline.html</link><pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate><atom:modified>Wed, 19 May 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/a-universal-design-for-pipeline.html</guid><description>1. 解耦引擎释放流水线能力 在设计系统时，我们常面临两难。是内敛复杂度，对外提供单一易用的功能；还是释放复杂度，将灵活归还用户。这非常考验产品能力。 设计 CICD 系统时，我们可以直接将 Jenkinsfile、PipelineRun 等概念直接抛给用户，让</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CloudNative</category><category>DevOps</category><category>CICD</category></item><item><title>一张画布搞定 DevOps、ServiceMesh、Serverless</title><link>https://www.chenshaowen.com/blog/a-canvas-cover-devops-servicemesh-serverless.html</link><pubDate>Sat, 05 Dec 2020 00:01:00 +0000</pubDate><atom:modified>Sat, 05 Dec 2020 00:01:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/a-canvas-cover-devops-servicemesh-serverless.html</guid><description>很多云原生的开源组件是先有服务，后有可视化。今天开了个脑洞，反其道而行，先有可视化交互，再设计底层。 1. 一张画布搞定半壁云原生 用户只需要一张画布，定义好 Workflow，就可以自由地游走在各种高大上的 Cloud Native 应用之上。 2. 为什么会这种奇怪的想法 2.1 看</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CloudNative</category><category>DevOps</category><category>ServiceMesh</category><category>Serverless</category></item></channel></rss>