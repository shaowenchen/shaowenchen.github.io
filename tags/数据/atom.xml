<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>数据 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E6%95%B0%E6%8D%AE/</link><description>Recent content in 数据 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 03 Sep 2021 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E6%95%B0%E6%8D%AE/atom.xml" rel="self" type="application/rss+xml"/><item><title>Prometheus、Grafana 搭建 Kubernetes 监控</title><link>https://www.chenshaowen.com/blog/the-monitor-of-kubernetes-using-prometheus-grafana.html</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 03 Sep 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-monitor-of-kubernetes-using-prometheus-grafana.html</guid><description>Prometheus 社区更新太快，之前写的一些文档有些过时。最近又开始关注可观测性，补齐运维方面的一些知识点。 1. 名词解释 Grafana 一个可视化工具，提供各种可视化面板，支持各种数据源，包括 Prometheus、OpenTSDB、MySQL 等。 Prometheus 一个时间序列数据库，主要</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>前端</category><category>分析</category></item><item><title>运营不再是拍脑袋的事</title><link>https://www.chenshaowen.com/blog/make-decisions-through-data.html</link><pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate><atom:modified>Fri, 18 Dec 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/make-decisions-through-data.html</guid><description>更多的技巧，请持续关注本文的更新。 1. 运营不再是拍脑袋的事 万物互联，互联网对物理世界的建模越来越准确。我们的地理位置、行动轨迹、在电子设备上的操作都在被记录。如果能汇集各大厂商的用户画像，我们的数字版就出来了。 你只能代表此刻的你，而数字人可以</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>思考</category><category>策略</category><category>经营</category></item><item><title>GrowingIO 数据采集字段分析</title><link>https://www.chenshaowen.com/blog/growingio-collect-js-field-analysis.html</link><pubDate>Tue, 08 Aug 2017 22:01:35 +0000</pubDate><atom:modified>Tue, 08 Aug 2017 22:01:35 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/growingio-collect-js-field-analysis.html</guid><description>1. 字段含义 1.1 u， 用户ID 1 2 3 4 5 6 if cookie.has(gr_user_id){ //使用 cookie 中的 gr_user_id 有效期十年 } else { //按照 &amp;#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&amp;#34; 格式，随机生成一个 gr_user_id } 1.2 s，会话ID 1 2 3 4 5 6 7 if cookie.has(gr_session_id_){ //使用 cookie 中的 gr_session_id_ //gr_session_id_，的有效期为 100 分钟 } else { //按照 &amp;#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&amp;#34; 格式，随机生成一个 gr_session_id_ }</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>前端</category><category>分析</category></item><item><title>Django 初始化数据之 fixture</title><link>https://www.chenshaowen.com/blog/django-initializes-fixture-of-data.html</link><pubDate>Mon, 07 Aug 2017 21:57:43 +0000</pubDate><atom:modified>Mon, 07 Aug 2017 21:57:43 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-initializes-fixture-of-data.html</guid><description>1. Fixtures 特点 Fixtures 是一种新的提供初始化数据的方法，并且被 Django 的测试框架用来处理单元测试的测试数据。不同于 SQL 文件的是，使用 fixture 可以提供一个被 Django 的 serialization 系统所能识别的序列化文件，它会被读取并自动转换成对应的 model ，然后保存进数据库。 2. 数据导出 将 app_name 的数据导出为 ini</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>数据</category><category>初始化</category></item><item><title>Base64 编码</title><link>https://www.chenshaowen.com/blog/base64-code.html</link><pubDate>Wed, 02 Aug 2017 17:00:31 +0000</pubDate><atom:modified>Wed, 02 Aug 2017 17:00:31 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/base64-code.html</guid><description>1. 应用场景 1.1 Mail 由于 RFC821 要求邮件内容必须为 ASCII 码。当邮件中有其他的非ASCII字符或二进制数据时，就需要 Content-Transfer-Encoding，Base64是其中的一种方法。 1.2 URL 有些应用需要把二进制数据放到URL里，而URL只允许特定</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>前端</category><category>编码</category><category>数据</category><category>Base64</category></item><item><title>运营埋点与方案设计</title><link>https://www.chenshaowen.com/blog/operation-buried-point-and-design.html</link><pubDate>Fri, 21 Jul 2017 13:34:15 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 13:34:15 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/operation-buried-point-and-design.html</guid><description>1. 名词解释 xpath ： 分为精确路径和概略路径两种做法。精确路径 ： body&amp;gt;div[0]&amp;gt;div[3]&amp;gt;ul&amp;gt;li[5]&amp;gt;a[0] ，从被点击的元素不断向上查找到根节点，并记录过程中每个节点。概略路径：body&amp;gt;div.header&amp;gt;div.nav&amp;gt;a[23]，在前者的基础上省略上溯路径中非白名</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>设计</category><category>方案</category><category>Demo</category></item><item><title>Django ORM 之 SQL</title><link>https://www.chenshaowen.com/blog/sql-code-about-django-orm.html</link><pubDate>Fri, 21 Jul 2017 13:21:08 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 13:21:08 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/sql-code-about-django-orm.html</guid><description>1. 基本概念 ORM：对象关系映射，Object Relational Mapping。它的作用是在关系型数据库和对象之间作一个映射。不需要复杂的 SQL 语句，操作数据如同操作对象一样简单。 QuerySet：给定模型的对象列表。QuerySet 允许从数据库中读取数据，对其</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>数据</category><category>Demo</category><category>SQL</category></item><item><title>Haystack 全文检索</title><link>https://www.chenshaowen.com/blog/haystack-full-text-search.html</link><pubDate>Fri, 21 Jul 2017 13:00:03 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 13:00:03 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/haystack-full-text-search.html</guid><description>简单介绍一下项目需求: 项目组需要对外发布文档，文档撰写使用的是Markdown，对外需要使用HTML。起初，使用的是Nginx+Jekyll的解决方案。随着文档的增加，文档系统对搜索功能有了强烈的需求。笔者在另外一篇文章中有所讨论，但是这几</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>数据</category><category>方案</category><category>检索</category></item><item><title>Jekyll 搜索方案</title><link>https://www.chenshaowen.com/blog/jekyll-search-option.html</link><pubDate>Thu, 13 Jul 2017 19:24:52 +0000</pubDate><atom:modified>Thu, 13 Jul 2017 19:24:52 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/jekyll-search-option.html</guid><description>简介：Jekyll是一套静态HTML生成工具。文档系统利用Jekyll进行部署，最终将Markdown转换为HTML文件输出。 搜索功能的需求是，根据关键字，匹配文档的标题或者内容，列出匹配的文档列表。 1. 方案一： Simple-Jekyll-Search 参考地址：https://g</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Jekyll</category><category>方案</category><category>数据</category></item><item><title>Django REST Framework 入门</title><link>https://www.chenshaowen.com/blog/101-of-django-rest-framework.html</link><pubDate>Thu, 22 Jun 2017 23:50:15 +0000</pubDate><atom:modified>Thu, 22 Jun 2017 23:50:15 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/101-of-django-rest-framework.html</guid><description>笔者从事的SaaS开发，对开发效率有着比较高的要求。从项目立项、原型设计评估、需求确定、前端设计、后台开发到最后的验收，几个星期完成一次迭代。在敏捷开发的指导下，开始推行前后端分离模式。前端专注于页面和交互，后端专注于API接口。后端提供A</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>后端</category><category>接口</category><category>Django</category><category>API</category></item><item><title>数据可视化实战</title><link>https://www.chenshaowen.com/blog/book/interactive-data-visualization-for-the-web.html</link><pubDate>Fri, 26 May 2017 19:06:09 +0000</pubDate><atom:modified>Fri, 26 May 2017 19:06:09 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/book/interactive-data-visualization-for-the-web.html</guid><description>副标题: 使用D3实际交互式图表 原作名: Interactive data visualization for the Web 作者: [美] Scott Murray 译者: 李松峰 出版社: 人民邮电出版社 出版年: 2013-6 ISBN: 9787115320117</description><dc:creator>微信公众号</dc:creator><category>书籍</category><category>数据</category><category>前端</category></item><item><title>七牛存储批量操作 - qshell</title><link>https://www.chenshaowen.com/blog/qiniu-storage-batch-operation-using-qshell.html</link><pubDate>Sun, 21 May 2017 21:47:49 +0000</pubDate><atom:modified>Sun, 21 May 2017 21:47:49 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/qiniu-storage-batch-operation-using-qshell.html</guid><description>1. 下载工具 - qshell qshell 是利用七牛文档上公开的 API 实现的一个方便开发者测试和使用七牛API服务的命令行工具，使用 Go 语言编写而成。目前该工具融合了七牛存储， CDN ，以及其他的一些七牛服务中经常使用到的方法对应的便捷命令。 | 版本 | 支持平台 | 链接 | 更新日志 | |</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>Demo</category><category>CDN</category><category>七牛</category><category>批量</category></item><item><title>Web开发中快速导出Excel文件(附代码)</title><link>https://www.chenshaowen.com/blog/how-to-export-excel-quickly-in-web-development.html</link><pubDate>Thu, 18 May 2017 17:51:05 +0000</pubDate><atom:modified>Thu, 18 May 2017 17:51:05 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-export-excel-quickly-in-web-development.html</guid><description>在Web开发中，常会遇到数据导出的需求。这篇主要介绍如何快速将数据导出，并保存为Excel文件。 1. 前端 Web开发中，格式化数据常以table的形式展示。下面是一个人员薪酬信息表，以导出这份数据为例。 姓名 职位 年龄 薪水 Tiger NixonTiger Nixon System Architect 61 $320,800 Garrett Winters Accountant 63 $170,750 Ashton</description><dc:creator>微信公众号</dc:creator><category>Django</category><category>前端</category><category>数据</category><category>Demo</category><category>博文</category></item><item><title>大数据时代</title><link>https://www.chenshaowen.com/blog/book/the-big-data.html</link><pubDate>Sun, 23 Apr 2017 21:10:24 +0000</pubDate><atom:modified>Sun, 23 Apr 2017 21:10:24 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/book/the-big-data.html</guid><description>副标题: 生活、工作与思维的大变革 作者: [英] 维克托·迈尔·舍恩伯格 出版社: 浙江人民出版社 出版年: 2012-12 ISBN: 9787213052545</description><dc:creator>微信公众号</dc:creator><category>书籍</category><category>数据</category></item><item><title>Python读写Excel</title><link>https://www.chenshaowen.com/blog/using-python-read-and-write-excel-data.html</link><pubDate>Sun, 16 Apr 2017 01:35:32 +0000</pubDate><atom:modified>Sun, 16 Apr 2017 01:35:32 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-python-read-and-write-excel-data.html</guid><description>Python、Excel常用于数据处理，难免会产生相互的数据传递、计算处理。本文主要介绍Python-Excel系列的库，以及xlrd和xlwt两个库是使用。 1. 常用库 xlwings，openpyxl，pandas，win32com，xlsx</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Demo</category><category>Python</category><category>数据</category></item><item><title>免费开放数据源</title><link>https://www.chenshaowen.com/blog/collect-free-open-data-source.html</link><pubDate>Sat, 15 Apr 2017 11:06:28 +0000</pubDate><atom:modified>Sat, 15 Apr 2017 11:06:28 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/collect-free-open-data-source.html</guid><description>1. 经济 世界银行 Gapminder 世界卫生组织和世界银行覆盖经济、医疗和社会统计数据 美国中央情报局,世界概况 包含267个国家的历史信息、人口、经济、政府、基设施和军事等信息 中国统计局最新宏观经济数据 工业和信息化部较多数据在此发布，尤其是有关工业运行及信息化相</description><dc:creator>微信公众号</dc:creator><category>数据</category><category>Collect</category><category>整理</category></item><item><title>区块链：信用成本降低引发的一场革新</title><link>https://www.chenshaowen.com/blog/block-chain-an-innovation-triggered-by-credit-cost-reduction.html</link><pubDate>Tue, 14 Feb 2017 09:19:48 +0000</pubDate><atom:modified>Tue, 14 Feb 2017 09:19:48 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/block-chain-an-innovation-triggered-by-credit-cost-reduction.html</guid><description>1. 社会是如何靠信用运作起来的 首先我们来做一个问答： @ask:为什么你用一张卡片就能乘坐公交？ @answer:我充了钱啊 @ask:钱？那你哪里来的钱 @answer:每个月的工资啊 @ask:公司为什么每个月要给你发工资？ @answer:签了合约</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>思考</category><category>数据</category></item><item><title>Django-数据迁移的几种方法(附代码)</title><link>https://www.chenshaowen.com/blog/several-methods-of-django-data-migration.html</link><pubDate>Tue, 17 Jan 2017 23:29:15 +0000</pubDate><atom:modified>Tue, 17 Jan 2017 23:29:15 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/several-methods-of-django-data-migration.html</guid><description>1. 背景 在Web开发的过程当中，常会涉及多个环境（本地、测试、正式环境）之间数据的迁移。本文主要探讨在django开发过程中，可能涉及的数据迁移路径，并寻找可行的方法。 2. 场景 数据迁移对象，一共分为四个：测试环境数据库、正式环境数据库、本地开发</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>数据</category><category>迁移</category></item></channel></rss>