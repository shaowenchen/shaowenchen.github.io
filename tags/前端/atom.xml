<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>前端 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E5%89%8D%E7%AB%AF/</link><description>Recent content in 前端 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 03 Sep 2021 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E5%89%8D%E7%AB%AF/atom.xml" rel="self" type="application/rss+xml"/><item><title>Prometheus、Grafana 搭建 Kubernetes 监控</title><link>https://www.chenshaowen.com/blog/the-monitor-of-kubernetes-using-prometheus-grafana.html</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 03 Sep 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-monitor-of-kubernetes-using-prometheus-grafana.html</guid><description>Prometheus 社区更新太快，之前写的一些文档有些过时。最近又开始关注可观测性，补齐运维方面的一些知识点。 1. 名词解释 Grafana 一个可视化工具，提供各种可视化面板，支持各种数据源，包括 Prometheus、OpenTSDB、MySQL 等。 Prometheus 一个时间序列数据库，主要</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>前端</category><category>分析</category></item><item><title>命令行 Banner 生成工具 - pyfiglet</title><link>https://www.chenshaowen.com/blog/cli-banner-tool-pyfiglet.html</link><pubDate>Wed, 03 Feb 2021 22:00:00 +0000</pubDate><atom:modified>Wed, 03 Feb 2021 22:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/cli-banner-tool-pyfiglet.html</guid><description>1. 什么是 pyfiglet pyfiglet 是一个用 Python 实现的 ASCII 艺术字生成工具。可以根据字符生成如下图形: 1 2 3 4 5 6 _ _ _ _ _ _ | |__ ___| | | ___ __ _____ _ __| | __| | | | &amp;#39;_ \ / _ \ | |/ _ \ \ \ /\ / / _ \| &amp;#39;__| |/ _` | | | | | | __/ | | (_) | \ V V / (_) | | | | (_| |_| |_| |_|\___|_|_|\___( ) \_/\_/ \___/|_| |_|\__,_(_) |/ 在编写 CLI 工具时，可</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>命令</category><category>前端</category><category>NPM</category></item><item><title>Django 全栈优化指南</title><link>https://www.chenshaowen.com/blog/django-full-stack-optimization-guide.html</link><pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Thu, 15 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-full-stack-optimization-guide.html</guid><description>由于数据量剧增，系统响应很慢。对应用系统进行了一系列的优化工作，系统响应时间得到了数量级级别的优化效果。总体看，在压缩文件、加快网络访问方面的优化，对前端性能有显著提升效果。在存储过程、缓存、逻辑代码方面的优化，对后端性能提升有显著效果。本</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>优化</category><category>前端</category><category>后端</category><category>指南</category></item><item><title>Nodejs 相关的一些安装问题</title><link>https://www.chenshaowen.com/blog/some-installation-problems-about-nodejs.html</link><pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate><atom:modified>Mon, 10 Sep 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/some-installation-problems-about-nodejs.html</guid><description>1. node-sass 安装 安装 node-sass 时，在 node scripts/install 阶段会从 github.com 下载 .node 文件，由于网络问题，常常会导致失败。 可以在项目内添加一个 .npmrc 文件，配置代理安装： 1 2 sass_binary_site=https://npm.taobao.org/mirrors/node-sass/ registry=https://registry.npm.taobao.org 或者使用 cnpm 安装 1 2 npm install -g cnpm --registry=https://registry.npm.taobao.org cnpm install node-sass 2. node-gyp 安装 node-gyp 是为 Nodejs 编译 C++ 扩展，使用的编译工具。这里 有详细的各个系统上的安装方法。 在</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>Webpack</category><category>Nodejs</category></item><item><title>Vue 中的 h 函数</title><link>https://www.chenshaowen.com/blog/h-function-in-vue.html</link><pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate><atom:modified>Sun, 08 Jul 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/h-function-in-vue.html</guid><description>1. createElement 方法 HTML 中常见的 DOM 操作是，修改 DOM 节点，访问 DOM 节点。 除此之外，W3C 还发布了创建 DOM 节点、删除 DOM 节点的技术标准。 createElement 方法，被用于创建一个 DOM 节点。createElement() 通常需要与 appendChild() 或 insertBefore() 方法配合使用。 其中: appendChild() 方法，用来在指定的子节点列表末，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>Vue</category><category>函数</category></item><item><title>Vue 中使用 axios</title><link>https://www.chenshaowen.com/blog/using-axios-in-vue.html</link><pubDate>Mon, 25 Jun 2018 15:00:00 +0000</pubDate><atom:modified>Mon, 25 Jun 2018 15:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-axios-in-vue.html</guid><description>1. axios 安装 使用 npm 安装 1 npm install axios --save 全局注册有两种方法： 绑定到原型上 1 2 import axios from &amp;#39;axios&amp;#39; Vue.prototype.axios = axios 这种方法，每个 Vue 对象都会新增一个 axios 对象。 1 2 3 this.axios.post(apiUrl).then((res) =&amp;gt; { //do something }) 挂载到 windows 对象上 在 DOM 的任意地方，都能使用 axios 函数。 1 2 import axios from &amp;#39;axios&amp;#39; window.axios = axios; 1 2 3 axios.post(apiUrl).then((res) =&amp;gt; { //do something }) 2. axios 配置 为了配合 Django 的 CSRF</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>接口</category><category>API</category><category>Vuejs</category><category>Axios</category></item><item><title>NPM 常用命令</title><link>https://www.chenshaowen.com/blog/common-commands-list-of-npm.html</link><pubDate>Sun, 24 Jun 2018 22:00:00 +0000</pubDate><atom:modified>Sun, 24 Jun 2018 22:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/common-commands-list-of-npm.html</guid><description>** 默认执行命名时，针对的是当前目录环境。如果加上 -g 参数，则表示针对的是全局生效。** npm 升级 1 npm install npm -g 查看当前版本 1 npm -v 查看 npm 源配置 1 npm config get registry 修改 npm 源 1 2 npm config set registry http://registry.npm.taobao.org/ # npm config set registry https://registry.npmjs.org/ 临时指定 npm 安装源 1 npm install [package name] --registry=https://registry.npm.taobao.org 设置 proxy 1 npm config set proxy http://proxy.example.com:8080 查看 proxy 1 npm config get proxy 删除</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>命令</category><category>前端</category><category>NPM</category></item><item><title>常用前端组件 List</title><link>https://www.chenshaowen.com/blog/component-list-of-front-library.html</link><pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 19 Jan 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/component-list-of-front-library.html</guid><description>toastr 消息弹框提示 artDialog 对话框组件 DataTables 基于 jQuery 表格插件 KendoUI 非常全的 UI 框架，很多组件 wangEditor Web 富文本编辑器 jstree 网页树形结构组件 highcharts echarts D3js 数据图表 select2 下拉框 validate 基于jquery的表单验证 Vuejs 可以用于双向数据绑定，也可以用于构建单页应用</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category></item><item><title>GitLab CI 之前端 Webpack 实践</title><link>https://www.chenshaowen.com/blog/front-webpack-practice-of-gitlab-ci.html</link><pubDate>Wed, 08 Nov 2017 09:15:56 +0000</pubDate><atom:modified>Wed, 08 Nov 2017 09:15:56 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/front-webpack-practice-of-gitlab-ci.html</guid><description>从 GitLab 8.0 开始，GitLab 开始集成 CI（持续集成） 功能。只需要在服务器上添加一个 Runner，同时在项目中添加一个 .gitlab-ci.yml 文件，就可以进行 CI。在 GitLab 搭建与配置 中笔者记录了从零开始搭建 GitLab 服务的整个流程。在 GitLab CI 持续集成 中笔者交代了 GitLab CI 的一些基本概念，并</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>持续集成</category><category>工具</category><category>DevOps</category><category>GitLab</category><category>CICD</category></item><item><title>Django 中对静态文件版本的控制</title><link>https://www.chenshaowen.com/blog/control-of-static-file-version-in-django.html</link><pubDate>Fri, 06 Oct 2017 09:58:43 +0000</pubDate><atom:modified>Fri, 06 Oct 2017 09:58:43 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/control-of-static-file-version-in-django.html</guid><description>为了快速地响应用户的需求、满足运营活动的需要，互联网产品通常有着非常高的发布频率。采用敏捷开发的方式，缩短了交付的周期，加快了产品的迭代，也给项目的文件管理带来了挑战。前端工程直接面向用户，首当其冲，最值得重视。频繁更新的图片、样式、交互，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>前端</category><category>JavaScript</category><category>文件</category><category>研发</category><category>版本</category></item><item><title>Django 静态文件处理</title><link>https://www.chenshaowen.com/blog/django-static-file-processing.html</link><pubDate>Thu, 05 Oct 2017 15:42:27 +0000</pubDate><atom:modified>Thu, 05 Oct 2017 15:42:27 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-static-file-processing.html</guid><description>1. Django 静态文件分类 Django 静态文件分为两类：static 和 media。 static： 是页面引用的 JS、CSS、Image 等文件 media：是用户上传的文件 2. 生产环境配置 生产环境，通常配置 Nginx 转发静态文件请求，而 Django 处理动态请求。 nginx 配置 1 2 3 4 5 6 7 location /media</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>前端</category><category>文件</category><category>Python</category></item><item><title>GrowingIO 数据采集字段分析</title><link>https://www.chenshaowen.com/blog/growingio-collect-js-field-analysis.html</link><pubDate>Tue, 08 Aug 2017 22:01:35 +0000</pubDate><atom:modified>Tue, 08 Aug 2017 22:01:35 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/growingio-collect-js-field-analysis.html</guid><description>1. 字段含义 1.1 u， 用户ID 1 2 3 4 5 6 if cookie.has(gr_user_id){ //使用 cookie 中的 gr_user_id 有效期十年 } else { //按照 &amp;#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&amp;#34; 格式，随机生成一个 gr_user_id } 1.2 s，会话ID 1 2 3 4 5 6 7 if cookie.has(gr_session_id_){ //使用 cookie 中的 gr_session_id_ //gr_session_id_，的有效期为 100 分钟 } else { //按照 &amp;#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&amp;#34; 格式，随机生成一个 gr_session_id_ }</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>数据</category><category>前端</category><category>分析</category></item><item><title>Axios ajax</title><link>https://www.chenshaowen.com/blog/axios-ajax.html</link><pubDate>Fri, 04 Aug 2017 07:07:11 +0000</pubDate><atom:modified>Fri, 04 Aug 2017 07:07:11 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/axios-ajax.html</guid><description>1. 基本概念 1.1 Ajax Ajax 全称为 &amp;quot; Asynchronous JavaScript and XML &amp;ldquo;（异步 JavaScript 和 XML ）。其核心由 JavaScript、XmlHttpRequest 、DOM 对象组成，通过 XmlHttpRequest 对象，向服务器发送异步请求，从服务器获得数据，然后用 JavaScript 来操作 DOM 而更新页面。 以 Jquery 为例： 1 2 3 4 5 6</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>工具</category><category>Axios</category><category>Ajax</category><category>API</category></item><item><title>Vue.js 组件库</title><link>https://www.chenshaowen.com/blog/vuejs-component-library.html</link><pubDate>Thu, 03 Aug 2017 21:53:02 +0000</pubDate><atom:modified>Thu, 03 Aug 2017 21:53:02 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/vuejs-component-library.html</guid><description>1. UI组件 element - 饿了么出品的Vue2的web UI工具套件 Vux - 基于Vue和WeUI的组件库 iview - 基于 Vuejs 的开源 UI 组件库 mint-ui - Vue 2的移动UI元素 muse-ui - 三端样式一致的响应式 UI 库 vue-material - 通过Vue Material和Vue 2建立精美的app应用 vuetify - 为移动而生的Vu</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>前端</category><category>工具</category><category>组件</category><category>Vuejs</category><category>转载</category></item><item><title>Base64 编码</title><link>https://www.chenshaowen.com/blog/base64-code.html</link><pubDate>Wed, 02 Aug 2017 17:00:31 +0000</pubDate><atom:modified>Wed, 02 Aug 2017 17:00:31 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/base64-code.html</guid><description>1. 应用场景 1.1 Mail 由于 RFC821 要求邮件内容必须为 ASCII 码。当邮件中有其他的非ASCII字符或二进制数据时，就需要 Content-Transfer-Encoding，Base64是其中的一种方法。 1.2 URL 有些应用需要把二进制数据放到URL里，而URL只允许特定</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>前端</category><category>编码</category><category>数据</category><category>Base64</category></item><item><title>页面使用自定义字体</title><link>https://www.chenshaowen.com/blog/page-uses-a-custom-font.html</link><pubDate>Tue, 01 Aug 2017 19:30:47 +0000</pubDate><atom:modified>Tue, 01 Aug 2017 19:30:47 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/page-uses-a-custom-font.html</guid><description>1. Font-family 网页上能使用的字体，限制在浏览器所在PC已经安装的几款字体。 Windows操作系统，中文字体： 黑体：SimHei 宋体：SimSun 新宋体：NSimSun 仿宋：FangSong 楷体：KaiTi 仿宋GB2312：FangSongGB2312</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>Demo</category></item><item><title>前后端对称加密传输 - AES</title><link>https://www.chenshaowen.com/blog/symmetric-encrypted-transmission-of-aes.html</link><pubDate>Wed, 26 Jul 2017 18:52:18 +0000</pubDate><atom:modified>Wed, 26 Jul 2017 18:52:18 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/symmetric-encrypted-transmission-of-aes.html</guid><description>1.基本概念 对称加密： 对称加密是，采用单密钥密码系统的加密方法，同一个密钥同时用作信息的加密和解密。由于速度快，常用于加密大量数据的传输。 DES（Data Encryption Standard），数据加密标准： DES的密钥长度是56比特，算法的理论安全强度是\</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>安全</category><category>前端</category><category>后端</category></item><item><title>Vue + Webpack 开发</title><link>https://www.chenshaowen.com/blog/101-of-vue-and-webpack-project.html</link><pubDate>Wed, 12 Jul 2017 17:26:29 +0000</pubDate><atom:modified>Wed, 12 Jul 2017 17:26:29 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/101-of-vue-and-webpack-project.html</guid><description>1，初始化项目 vue-cli 是Vue官方发布的项目脚手架，使用 vue-cli 可以快速创建 Vue + Webpack项目。 1 2 3 4 5 6 7 8 9 10 npm install -g vue-cli # 全局安装vue-cli vue init webpack myproject # 创建vue项目，执行时，会提示输入项目的相关信息 cd myproject # 进入项目 npm install # 安装依赖包，新建nod</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>工具</category><category>Vue</category><category>Webpack</category></item><item><title>ECMAScript 6 入门</title><link>https://www.chenshaowen.com/blog/book/the-101-of-ecma-script.html</link><pubDate>Tue, 27 Jun 2017 20:05:01 +0000</pubDate><atom:modified>Tue, 27 Jun 2017 20:05:01 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/book/the-101-of-ecma-script.html</guid><description>作者: 阮一峰 出版社: 电子工业出版社 出版年: 2014-8-1 ISBN: 9787121238369 电子版</description><dc:creator>微信公众号</dc:creator><category>书籍</category><category>JavaScript</category><category>前端</category></item><item><title>前后端分离 - Mock数据</title><link>https://www.chenshaowen.com/blog/mock-server.html</link><pubDate>Fri, 16 Jun 2017 21:10:54 +0000</pubDate><atom:modified>Fri, 16 Jun 2017 21:10:54 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/mock-server.html</guid><description>前后端分离开发中，当后端 API 没有完成时，前端无法继续调试。为了前后端能并行开发，前端需要一套 API 的接口环境，这个就是 Mock API 。下面的图，对开发流程进行了很好的顺理。如果没有 Mock 数据的环节，前后端的联调会消耗非常多的时间。 1. 何为 Mock ，模拟也 通常，后端提供</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>后端</category></item><item><title>同源策略与跨域访问</title><link>https://www.chenshaowen.com/blog/same-origin-policy.html</link><pubDate>Tue, 13 Jun 2017 17:19:03 +0000</pubDate><atom:modified>Tue, 13 Jun 2017 17:19:03 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/same-origin-policy.html</guid><description>1. 同源策略 同源策略是浏览器的安全基石。 同源的定义，包括三个方面： 协议相同 域名相同 端口相同 限制范围： Cookie、LocalStorage 和 IndexDB 无法读取 DOM 无法获得 AJAX 请求不能发送 简单说，协议、域名、端口三者任意不同的两个 URL 之间不允许通信，范围包括</description><dc:creator>微信公众号</dc:creator><category>前端</category><category>网络</category><category>安全</category><category>博文</category></item><item><title>数据可视化实战</title><link>https://www.chenshaowen.com/blog/book/interactive-data-visualization-for-the-web.html</link><pubDate>Fri, 26 May 2017 19:06:09 +0000</pubDate><atom:modified>Fri, 26 May 2017 19:06:09 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/book/interactive-data-visualization-for-the-web.html</guid><description>副标题: 使用D3实际交互式图表 原作名: Interactive data visualization for the Web 作者: [美] Scott Murray 译者: 李松峰 出版社: 人民邮电出版社 出版年: 2013-6 ISBN: 9787115320117</description><dc:creator>微信公众号</dc:creator><category>书籍</category><category>数据</category><category>前端</category></item><item><title>Web开发中快速导出Excel文件(附代码)</title><link>https://www.chenshaowen.com/blog/how-to-export-excel-quickly-in-web-development.html</link><pubDate>Thu, 18 May 2017 17:51:05 +0000</pubDate><atom:modified>Thu, 18 May 2017 17:51:05 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-export-excel-quickly-in-web-development.html</guid><description>在Web开发中，常会遇到数据导出的需求。这篇主要介绍如何快速将数据导出，并保存为Excel文件。 1. 前端 Web开发中，格式化数据常以table的形式展示。下面是一个人员薪酬信息表，以导出这份数据为例。 姓名 职位 年龄 薪水 Tiger NixonTiger Nixon System Architect 61 $320,800 Garrett Winters Accountant 63 $170,750 Ashton</description><dc:creator>微信公众号</dc:creator><category>Django</category><category>前端</category><category>数据</category><category>Demo</category><category>博文</category></item><item><title>jQuery插件开发</title><link>https://www.chenshaowen.com/blog/plugin-development-of-jquery.html</link><pubDate>Sun, 05 Mar 2017 17:16:43 +0000</pubDate><atom:modified>Sun, 05 Mar 2017 17:16:43 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/plugin-development-of-jquery.html</guid><description>1. jQuery特征 jQuery消除了浏览器的兼容问题 遍历DOM树、选择元素 大量的插件库 工具函数库，$.type()、$.extent()等 jQuery的核心函数，通常指的是一个工厂对象，即jQuery()函数，或者更为常用的别名$()函数。</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>JavaScript</category><category>Demo</category></item><item><title>Vuejs入门实践</title><link>https://www.chenshaowen.com/blog/101-about-vuejs.html</link><pubDate>Mon, 02 Jan 2017 19:55:16 +0000</pubDate><atom:modified>Mon, 02 Jan 2017 19:55:16 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/101-about-vuejs.html</guid><description>1. 遇到了什么问题 如果实现的功能简单，开发和维护容易，是不会有设计模式、框架等相关问题研究的。正是因为，Web系统复杂、需求变更快、复用多，开发人员多、人员交接频繁。我们需要一定的约定规则去规避，这些环节产生的风险。 其中大量的研究工作在，系统</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>前端</category><category>工具</category><category>Vuejs</category></item><item><title>工具类产品交互优化案例分享</title><link>https://www.chenshaowen.com/blog/how-to-create-excellent-product-interaction.html</link><pubDate>Wed, 28 Dec 2016 20:05:13 +0000</pubDate><atom:modified>Wed, 28 Dec 2016 20:05:13 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-create-excellent-product-interaction.html</guid><description>本人所在的岗位职责，涉及全栈开发，不仅要用 Python 写后台逻辑，还要自己写前端界面和交互。开发的程序部署于 Paas 平台，考虑到开发人员是非专业前端，为了降低开发门槛，提供了一种类似 Dreamweaver 的工具。使得开发人员可以通过，拖拽、拷贝等形式快速开发出页面，然后转向后</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>分享</category><category>前端</category></item><item><title>Chrome 扩展开发</title><link>https://www.chenshaowen.com/blog/how-to-develop-chrome-plugin.html</link><pubDate>Sun, 04 Dec 2016 15:19:06 +0000</pubDate><atom:modified>Sun, 04 Dec 2016 15:19:06 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-develop-chrome-plugin.html</guid><description>1. Chrome增强功能的方式：扩展、插件、应用 Google Chrome（谷歌浏览器）发展至今，已经不仅仅是一个浏览器，更像一个平台，可以个性化的安装自己需要的服务，同时也可以通过它来发布自己提供的服务。目前主要有三种方式来扩展浏览器的功能： 2. 扩展（E</description><dc:creator>微信公众号</dc:creator><category>开发</category><category>前端</category><category>Chrome</category><category>扩展</category></item><item><title>JavaScript高级程序设计（第3版）</title><link>https://www.chenshaowen.com/blog/book/professional-javascript-for-web.html</link><pubDate>Sat, 03 Dec 2016 11:44:19 +0000</pubDate><atom:modified>Sat, 03 Dec 2016 11:44:19 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/book/professional-javascript-for-web.html</guid><description>英文书名: Professional JavaScript for Web 作者: [美] Nicholas C. Zakas 出版社: 图灵程序设计丛书 出版年: 2012-3-29 ISBN: 9787115275790</description><dc:creator>微信公众号</dc:creator><category>书籍</category><category>前端</category><category>JavaScript</category></item><item><title>JavaScript 的事件处理机制</title><link>https://www.chenshaowen.com/blog/js-event-handle-mechanism.html</link><pubDate>Tue, 29 Nov 2016 21:45:06 +0000</pubDate><atom:modified>Tue, 29 Nov 2016 21:45:06 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/js-event-handle-mechanism.html</guid><description>1. 事件处理模型：冒泡和捕获型 1 2 3 &amp;lt;div id=&amp;#34;outer&amp;#34;&amp;gt; &amp;lt;p id=&amp;#34;inner&amp;#34;&amp;gt;Click!&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; 上面的代码当中一个div元素当中有一个p子元素，如果两个元素都有一个click的处理函数，那么我们怎么才能知道哪一个函数会首先被触发呢？ 为了解决这个问题微软和网景提出了两种几乎完全相反的概念。 事件</description><dc:creator>微信公众号</dc:creator><category>前端</category><category>JavaScript</category><category>整理</category><category>事件</category></item><item><title>前端自动化构建工具 gulpjs</title><link>https://www.chenshaowen.com/blog/front-auto-build-tools-gulp.html</link><pubDate>Tue, 28 Jun 2016 21:59:04 +0000</pubDate><atom:modified>Tue, 28 Jun 2016 21:59:04 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/front-auto-build-tools-gulp.html</guid><description>1. 前端自动化构建工具 在处理前端场景时，用 Less 写 CSS，用 Jade 写 HTML，用 Browserify 模块化，为非覆盖式部署的资源加 MD5 戳等。这些工作如果纯手工来做，工作效率将会非常低。而前端自动化构建工具可以把这些重复工作一次配置，多次重复执行，极大的提高开发效率。 前端</description><dc:creator>微信公众号</dc:creator><category>前端</category><category>工具</category><category>博文</category></item></channel></rss>