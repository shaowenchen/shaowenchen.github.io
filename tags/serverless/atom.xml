<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Serverless on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/serverless/</link><description>Recent content in Serverless on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Tue, 09 May 2023 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/serverless/atom.xml" rel="self" type="application/rss+xml"/><item><title>WebAssembly Serverless 飞入寻常百姓家</title><link>https://www.chenshaowen.com/blog/webassembly-serverless-will-be-a-common-arch-in-the-future.html</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><atom:modified>Tue, 09 May 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/webassembly-serverless-will-be-a-common-arch-in-the-future.html</guid><description>1. 基于容器的 Serverless 无法支撑下一代应用的形态 如上图，我们正经历着一次运行时态的变革。 从裸金属机到虚拟机，应用不在受限于本地服务器的数量、机房稳定性，具有更好的弹性和可用性。 从虚拟机到容器，应用不再受限于操作系统、配置漂移，具有更好的可移植性和可扩</description><dc:creator>微信公众号</dc:creator><category>WebAssembly</category><category>Serverless</category><category>Kubernetes</category><category>应用</category></item><item><title>使用腾讯云 Serverless 开发公众号后端</title><link>https://www.chenshaowen.com/blog/develop-a-wechat-backend-using-tencent-serverless.html</link><pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate><atom:modified>Sat, 28 Aug 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/develop-a-wechat-backend-using-tencent-serverless.html</guid><description>1. Serverless 的使用场景 如果说云计算是希望资源能够像自来水一样，隋开随用、随关随停，那么 Serverless 就是云计算的未来方向之一。相较于 IaaS、Kubernetes 这些运行时，Serverless 提供更细粒度资源控制的同时，还能提供更大的弹性，允许开发者快速交付</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>GitHub</category><category>CICD</category><category>Serverless</category><category>微信</category></item><item><title>一张画布搞定 DevOps、ServiceMesh、Serverless</title><link>https://www.chenshaowen.com/blog/a-canvas-cover-devops-servicemesh-serverless.html</link><pubDate>Sat, 05 Dec 2020 00:01:00 +0000</pubDate><atom:modified>Sat, 05 Dec 2020 00:01:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/a-canvas-cover-devops-servicemesh-serverless.html</guid><description>很多云原生的开源组件是先有服务，后有可视化。今天开了个脑洞，反其道而行，先有可视化交互，再设计底层。 1. 一张画布搞定半壁云原生 用户只需要一张画布，定义好 Workflow，就可以自由地游走在各种高大上的 Cloud Native 应用之上。 2. 为什么会这种奇怪的想法 2.1 看</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CloudNative</category><category>DevOps</category><category>ServiceMesh</category><category>Serverless</category></item></channel></rss>