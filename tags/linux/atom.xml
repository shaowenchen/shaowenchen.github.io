<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Linux on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/linux/</link><description>Recent content in Linux on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sat, 20 Aug 2022 08:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/linux/atom.xml" rel="self" type="application/rss+xml"/><item><title>如何设置端口仅对指定 IP 开放访问</title><link>https://www.chenshaowen.com/blog/set-port-to-be-accessible-only-to-a-specified-ip.html</link><pubDate>Sat, 20 Aug 2022 08:00:00 +0000</pubDate><atom:modified>Sat, 20 Aug 2022 08:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/set-port-to-be-accessible-only-to-a-specified-ip.html</guid><description>1. 主机服务端口 1 2 iptables -I INPUT -p tcp --dport 80 -j DROP iptables -I INPUT -p tcp -s 1.2.3.4 --dport 80 -j ACCEPT 这里仅允许 1.2.3.4 访问本地主机的 80 端口。 2. Docker 服务端口 对于类似 docker run -d -p 80:80 shaowenchen/demo-whoami 运行的服务，上面的方法无效，需要在 DOCKER-USER 链中添加规则。 Docker 会将 iptables 规则添加到 DOCKER 链中，如果需要在 Docker 之前添加规则需要添加到 DOCKER-USER 链中</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Docker</category><category>Linux</category><category>安全</category><category>限制</category></item><item><title>使用 Linux TC 进行流量限制</title><link>https://www.chenshaowen.com/blog/traffic-restriction-using-linux-tc.html</link><pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate><atom:modified>Sat, 20 Aug 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/traffic-restriction-using-linux-tc.html</guid><description>1. Linux 下的流量控制原理 通过对包的排队，我们可以控制数据包的发送方式。这种控制，称之为数据整形，shape the data，包括对数据的以下操作: 增加延时 丢包 重新排列 重复、损坏 速率控制 在 qdisc-class-filter 结构下，对流量进行控制需要进行三个步骤: 创建 qdisc 队列 上面提到 Linux 是</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Linux</category><category>TC</category><category>流量控制</category></item><item><title>使用 systemd timer 配置定时任务</title><link>https://www.chenshaowen.com/blog/how-to-configure-scheduled-task-using-systemd-timer.html</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><atom:modified>Thu, 26 May 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-configure-scheduled-task-using-systemd-timer.html</guid><description>1. 准备定时脚步 如果是 Bash 脚本，第一行需要指定解释器。 1 2 mkdir -p /root/scripts vim /root/scripts/quick-clear.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/bin/sh /usr/local/bin/kubectl --kubeconfig /root/.kube/config get pods --all-namespaces -o wide | grep Evicted | awk &amp;#39;{print $1,$2}&amp;#39; | xargs --no-run-if-empty -L1 /usr/local/bin/kubectl --kubeconfig /root/.kube/config delete pod -n || true /usr/local/bin/kubectl --kubeconfig /root/.kube/config get pods --all-namespaces -o wide | grep Error | awk &amp;#39;{print $1,$2}&amp;#39; | xargs --no-run-if-empty -L1 /usr/local/bin/kubectl --kubeconfig /root/.kube/config delete pod -n || true /usr/local/bin/kubectl --kubeconfig /root/.kube/config get pods --all-namespaces -o wide | grep Completed | awk &amp;#39;{print $1,$2}&amp;#39; | xargs --no-run-if-empty</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Linux</category><category>运维</category></item><item><title>Linux 网络流量监控终端工具 - nload</title><link>https://www.chenshaowen.com/blog/the-nload-is-a-the-terminal-tool-of-linux-network-traffic-monitor.html</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 10 Sep 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-nload-is-a-the-terminal-tool-of-linux-network-traffic-monitor.html</guid><description>nload 是一个流量监控的终端工具，读取 /proc/net/dev 文件，绘制流量图。下面是一个简单的使用简介。 1. 安装 CentOS 1 yum install -y nload 如果系统的源找不到 nload 包，可以执行如下命令添加新源: 1 yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm Ubuntu 1 apt-get install -y nload 2. 参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 nload --help Command line syntax: nload [options] [devices] nload --help|-h Options: -a</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>Linux</category><category>工具</category><category>nload</category></item><item><title>SELinux 和 iptables</title><link>https://www.chenshaowen.com/blog/selinux-and-iptables-on-linux.html</link><pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 21 Sep 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/selinux-and-iptables-on-linux.html</guid><description>最近操作服务器时，遇到了一些不同清楚的概率，查找了一些资料，整理如下。 1. BLP 安全模型 该模型将信息系统中的实体分为两部分： 主体（Subject），实时操作的，如用户和进程 客体（Object），被操作的对象，如文件和数据库等。 对主体和客体来说，有</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>安全</category><category>Linux</category><category>iptables</category></item><item><title>Linux 性能命令工具</title><link>https://www.chenshaowen.com/blog/linux-performance-command-tools.html</link><pubDate>Sun, 28 May 2017 15:47:41 +0000</pubDate><atom:modified>Sun, 28 May 2017 15:47:41 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/linux-performance-command-tools.html</guid><description>Linux 平台上的性能工具有很多，眼花缭乱，长期的摸索和经验发现最好用的，还是那些久经考验的、简单的小工具。下面是，系统性能专家 Brendan D.Gregg ，关于Linux性能方面的talk(Linux Performance Tools)中所整理的命令工具。 1. 总览 2. 监控 3. 测试 4. 优化 5. 静态 6. 追踪</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>Linux</category></item></channel></rss>