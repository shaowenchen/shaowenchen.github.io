<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>CentOS on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/centos/</link><description>Recent content in CentOS on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 08 Apr 2021 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/centos/atom.xml" rel="self" type="application/rss+xml"/><item><title>如何在 CentOS 8 下编译 istio 项目</title><link>https://www.chenshaowen.com/blog/how-to-build-istio-under-centos.html</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><atom:modified>Thu, 08 Apr 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-build-istio-under-centos.html</guid><description>本文主要描述在 CentOS 8.2 下，如何使用本地工具编译 https://github.com/istio/istio 项目。另外一种方法是通过 BUILD_WITH_CONTAINER 参数控制，使用容器编译，仅依赖于 make 和 docker。 1. 安装并升级 Ruby &amp;gt;= 2.6 安装 Ruby 1 yum install -y ruby 查看 Ruby 版本 1 2 3 ruby -v ruby 2.5.5p157 (2019-03-15 revision 67260) [x86_64-linux] 安装 RVM 1 2 3 4 yum install -y tar gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB curl -sSL https://get.rvm.io | bash -s stable source /etc/profile.d/rvm.sh 安</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CentOS</category><category>Istio</category></item><item><title>CentOS 7 下安装并配置 Zsh</title><link>https://www.chenshaowen.com/blog/install-zsh-in-centos-7.html</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><atom:modified>Mon, 29 Mar 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/install-zsh-in-centos-7.html</guid><description>1. 安装 zsh 1 sudo yum install -y zsh 2. 安装 oh-my-zsh 1 sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; 建议将 Zsh 设置为默认的 Shell。 3. 安装插件 3.1 安装 autojump 1 sudo yum install -y epel-release 1 sudo yum install -y autojump-zsh 3.2 安装 zsh-autosuggestions 1 git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions 3.3 安装 zsh-syntax-highlighting 1 git clone git://github.com/zsh-users/zsh-syntax-highlighting $ZSH_CUSTOM/plugins/zsh-syntax-highlighting 4. 添加 .zshrc 配置 1 sed -i &amp;#39;s/^plugins=(\(.*\)/plugins=(autojump zsh-autosuggestions zsh-syntax-highlighting \1/&amp;#39; ~/.zshrc 退出 Terminal, 再次登录即可。</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CentOS</category><category>环境</category><category>Zsh</category></item><item><title>CentOS 7 下安装并配置 Homebrew</title><link>https://www.chenshaowen.com/blog/install-homebrew-in-centos-7.html</link><pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate><atom:modified>Sun, 28 Mar 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/install-homebrew-in-centos-7.html</guid><description>在 CentOS 下安装包时，通常需要寻找各种源，使用 Homebrew 就没这样的烦恼。本文使用的是 CentOS 7.6，不同的系统版本可能会有差异。 1. 创建非 root 用户 Homebrew 不允许以 root 身份运行，因此需要创建一个新的用户。 新建用户 1 adduser shaowenchen 设置密码 1 passwd shaowenchen 给新用户添加 sudo 权限 编辑权限配置文件: 1 2 chmod</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CentOS</category><category>环境</category><category>Homebrew</category></item><item><title>CentOS 7 安装 Java 开发环境</title><link>https://www.chenshaowen.com/blog/install-jdk-in-centos-7.html</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><atom:modified>Wed, 01 Jul 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/install-jdk-in-centos-7.html</guid><description>1. 编译报错：java.nio.file.NoSuchFileException 在编译 Jenkins 插件时，提示错误信息如下： 1 2 3 4 mvn package Compilation failure [ERROR] java.nio.file.NoSuchFileException: /root/java/target/classes/META-INF/annotations/hudson.Extension 原来 Maven 使用的是 JAVA_HOME 而不是 PATH，找不到 Java 运行环境导致，而且 Java 11 不行，Java 1.8 才能正常编译。 2. 安装 JDK 安装 Java</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Java</category><category>环境</category><category>CentOS</category><category>研发</category></item><item><title>开发 Tips（14）</title><link>https://www.chenshaowen.com/blog/developing-tips-14.html</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><atom:modified>Fri, 06 Sep 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-14.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Kubernetes 集群添加新的 Node 节点 在执行 kubeadm init 时，Console 会打印添加 Node 的命令。Token 默认的有效期为 24h 。当超过有效期时，需要重新创建 Token ，执行命令： 1 2 kubeadm token create --print-join-command kubeadm join 192.168.10.2:6443 --token ocyzce.3hv8y7w60lrvulir --discovery-token-ca-cert-hash sha256:7a86632f54de1004bb3f38124b663f837399d6ba9aa803d58c6707a76c02a6cb 使用 Console 输出的命令，即可将 Node 节点添</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Kubernetes</category><category>CentOS</category><category>Tcpdump</category></item><item><title>开发 Tips（5）</title><link>https://www.chenshaowen.com/blog/developing-tips-5.html</link><pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Sat, 24 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-5.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python 内存分析方法 主要涉及四个工具： memory_profile：分析每一行代码的内存使用量 objgraph：跟踪内存中的对象的关系 guppy：在运行时跟踪堆的使用情况 pyrasite：向进程中注入代</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>Docker</category><category>CentOS</category><category>性能</category></item><item><title>开发 Tips（4）</title><link>https://www.chenshaowen.com/blog/developing-tips-4.html</link><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Sun, 11 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-4.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. WhiteNoise 转发静态文件 Django 内置的静态文件服务器效率很低，而 WhiteNoise 是一个不错的替代品。具有如下特点： 通常用于 PaaS 服务 支持 wsgi 应用程序，针对 Django 进行了特殊适配 配合 CDN 使用，更佳 在 Gunicorn 配合下，使用 sendfile 系统调用，处理效率非常高 相比</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>文件</category><category>Django</category><category>CentOS</category><category>Docker</category></item><item><title>安装 Centos 之后，需要做的几件事</title><link>https://www.chenshaowen.com/blog/after-install-centos.html</link><pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate><atom:modified>Sun, 21 Oct 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/after-install-centos.html</guid><description>1. 更换镜像源 首先备份官方的源 1 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 下载新的源到 /etc/yum.repos.d/ CentOS 5 1 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo CentOS 6 1 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo CentOS 7 1 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 生成元数据缓存 1 yum makecache 2. 访问 NTFS 文件系统 Linux 内核目前只支持对微软 NTFS 文件系统的读取。 ntfs-3g 是微软 NTFS 文件系统的一个开源实现，同时支持读和写。 ntfs-3g 在 epel-release 源中，执行命令查</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>CentOS</category></item></channel></rss>