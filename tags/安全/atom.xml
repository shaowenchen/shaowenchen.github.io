<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>安全 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E5%AE%89%E5%85%A8/</link><description>Recent content in 安全 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sat, 11 Feb 2023 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E5%AE%89%E5%85%A8/atom.xml" rel="self" type="application/rss+xml"/><item><title>使用 Falco 监听运行时安全</title><link>https://www.chenshaowen.com/blog/listen-runtime-security-using-falco.html</link><pubDate>Sat, 11 Feb 2023 00:00:00 +0000</pubDate><atom:modified>Sat, 11 Feb 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/listen-runtime-security-using-falco.html</guid><description>1. Falco 是什么 Falco 是由 Sysdig 贡献给 CNCF 的云原生运行时安全相关项目。 Falco 实现了一套可扩展的事件规则过滤引擎，通过获取事件、匹配安全规则、产生告警通知系列操作，能够发现系统中的安全问题。其中的事件来自系统调用，同时也支持 ebpf 探针，规则是开源的[1]，可以自行定</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Falco</category><category>安全</category><category>工具</category></item><item><title>如何设置端口仅对指定 IP 开放访问</title><link>https://www.chenshaowen.com/blog/set-port-to-be-accessible-only-to-a-specified-ip.html</link><pubDate>Sat, 20 Aug 2022 08:00:00 +0000</pubDate><atom:modified>Sat, 20 Aug 2022 08:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/set-port-to-be-accessible-only-to-a-specified-ip.html</guid><description>1. 主机服务端口 1 2 iptables -I INPUT -p tcp --dport 80 -j DROP iptables -I INPUT -p tcp -s 1.2.3.4 --dport 80 -j ACCEPT 这里仅允许 1.2.3.4 访问本地主机的 80 端口。 2. Docker 服务端口 对于类似 docker run -d -p 80:80 shaowenchen/demo-whoami 运行的服务，上面的方法无效，需要在 DOCKER-USER 链中添加规则。 Docker 会将 iptables 规则添加到 DOCKER 链中，如果需要在 Docker 之前添加规则需要添加到 DOCKER-USER 链中</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Docker</category><category>Linux</category><category>安全</category><category>限制</category></item><item><title>Kuberntes 系统下的 `rm -rf /`，执行完就可以跑路了</title><link>https://www.chenshaowen.com/blog/attack-vectors-under-kubernetes.html</link><pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 22 Jan 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/attack-vectors-under-kubernetes.html</guid><description>本文档主要用于展示 Docker 特权模式的危害，请谨慎操作。对于没有 CLI 操作权限的用户，可以拷贝示例的 Yaml，直接创建集群负载 Pod、Job、DaemonSet 等进行操作。 1. 直接删除全部资源 如果能登陆机器，收拾好东西，执行命令: 1 kubectl delete all --all --all-namespaces 但是也有可能</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>安全</category><category>攻击向量</category></item><item><title>如何在主机上调试容器、在容器中操作主机</title><link>https://www.chenshaowen.com/blog/operate-host-in-container-and-debug-container-on-host.html</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><atom:modified>Mon, 11 Jan 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/operate-host-in-container-and-debug-container-on-host.html</guid><description>1. 一个奇怪的需求 老板有个奇怪的需求，通过一个 kubeconfig 文件，获取主机的各种状态信息，比如进程列表、进程状态等。 第一反应就是，老板是不是不懂容器，容器怎么能这样玩，这样玩还要什么容器，内心万马奔腾。 直到最近遇到了一个命令行工具，才发现原来小丑是我自己</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>容器</category><category>安全</category><category>Kubernetes</category><category>Docker</category></item><item><title>各大公司安全应急响应中心列表（ALL SRC LIST）</title><link>https://www.chenshaowen.com/blog/all-src-list.html</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 01 Jan 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/all-src-list.html</guid><description>1. 行业规范 [TPSA19-22]SRC行业安全测试规范: https://security.tencent.com/announcement/msg/180 2. SRC 列表 序号 上线时间 SRC名称 01 2012 TSRC（腾讯） 02 2013 ZSRC（猪八戒） 03 2013 NSRC（网易） 04 2013 KSRC（金山） 05 2013 JSRC（京东） 06 2013 BSRC（百度） 07 2013 ASRC（阿里巴巴） 08 2013 3</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>安全</category></item><item><title>如何预防 Web 富文本中的 XSS 攻击</title><link>https://www.chenshaowen.com/blog/how-to-prevent-xss-in-web-rich-text.html</link><pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate><atom:modified>Tue, 04 Jun 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-prevent-xss-in-web-rich-text.html</guid><description>1. XSS 原理和常见的几种攻击方式 XSS 攻击是指，通过执行恶意脚本，以实现窃取用户登陆态、劫持会话等目的的攻击方式。恶意脚本的输入源有，Cookies、Post 表单、Get 请求、HTTP 头内容等。通常，我们将一段 XSS 攻击的代码片段称之为 XSS 向量。 常见的 XSS</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>XSS</category><category>富文本</category><category>安全</category><category>Web</category></item><item><title>django-xss-cleaner</title><link>https://www.chenshaowen.com/blog/django-xss-cleaner.html</link><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><atom:modified>Mon, 03 Jun 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-xss-cleaner.html</guid><description>django-xss-cleaner 是一个基于 bleach 的 Django XSSFilter 工具包，实现了对 GET 和 POST 请求参数的 XSS 白名单过滤功能。包中内置了部分白名单 HTML 标签、属性设置，同时也支持自定义扩展。项目地址，https://github.com/shaowenchen/django-xss-cleaner 1.</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>XSS</category><category>Django</category><category>安全</category></item><item><title>从账户安全到二次验证</title><link>https://www.chenshaowen.com/blog/from-account-security-to-secondary-verification.html</link><pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate><atom:modified>Thu, 21 Mar 2019 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/from-account-security-to-secondary-verification.html</guid><description>1. 安全问题日趋严重 随着互联网对生活场景的层层渗透，我们越来越依赖于各种网络 ID。这些 ID 构成了数字版的我们，是极其重要的账户资产。 另一方面，各种账户信息泄露事件、安全事件却时有发生，CSDN、12306、华住酒店、Facebook、Twitt</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>安全</category><category>验证</category></item><item><title>SELinux 和 iptables</title><link>https://www.chenshaowen.com/blog/selinux-and-iptables-on-linux.html</link><pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 21 Sep 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/selinux-and-iptables-on-linux.html</guid><description>最近操作服务器时，遇到了一些不同清楚的概率，查找了一些资料，整理如下。 1. BLP 安全模型 该模型将信息系统中的实体分为两部分： 主体（Subject），实时操作的，如用户和进程 客体（Object），被操作的对象，如文件和数据库等。 对主体和客体来说，有</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>安全</category><category>Linux</category><category>iptables</category></item><item><title>前后端对称加密传输 - AES</title><link>https://www.chenshaowen.com/blog/symmetric-encrypted-transmission-of-aes.html</link><pubDate>Wed, 26 Jul 2017 18:52:18 +0000</pubDate><atom:modified>Wed, 26 Jul 2017 18:52:18 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/symmetric-encrypted-transmission-of-aes.html</guid><description>1.基本概念 对称加密： 对称加密是，采用单密钥密码系统的加密方法，同一个密钥同时用作信息的加密和解密。由于速度快，常用于加密大量数据的传输。 DES（Data Encryption Standard），数据加密标准： DES的密钥长度是56比特，算法的理论安全强度是\</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>安全</category><category>前端</category><category>后端</category></item><item><title>Django Forms 功能</title><link>https://www.chenshaowen.com/blog/django-forms-function.html</link><pubDate>Fri, 21 Jul 2017 21:29:40 +0000</pubDate><atom:modified>Fri, 21 Jul 2017 21:29:40 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/django-forms-function.html</guid><description>1. 自动生成HTML表单元素 Widget，用来渲染成HTML元素的工具。 指定小部件 1 2 3 4 5 6 from django import forms class CommentForm(forms.Form): name = forms.CharField() url = forms.URLField() comment = forms.CharField(widget=forms.Textarea) CommentForm().as_table() 输出值 1 &amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;&amp;lt;label for=&amp;#34;id_name&amp;#34;&amp;gt;Name:&amp;lt;/label&amp;gt;&amp;lt;/th&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input id=&amp;#34;id_name&amp;#34; name=&amp;#34;name&amp;#34; type=&amp;#34;text&amp;#34; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;\n&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;&amp;lt;label for=&amp;#34;id_url&amp;#34;&amp;gt;Url:&amp;lt;/label&amp;gt;&amp;lt;/th&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input id=&amp;#34;id_url&amp;#34; name=&amp;#34;url&amp;#34; type=&amp;#34;url&amp;#34; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;\n&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;&amp;lt;label for=&amp;#34;id_comment&amp;#34;&amp;gt;Comment:&amp;lt;/label&amp;gt;&amp;lt;/th&amp;gt;&amp;lt;td&amp;gt;&amp;lt;textarea cols=&amp;#34;40&amp;#34; id=&amp;#34;id_comment&amp;#34; name=&amp;#34;comment&amp;#34; rows=&amp;#34;10&amp;#34;&amp;gt;\r\n&amp;lt;/textarea&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt; 指定表单字段为 Textarea 小部件，而不是默认的 TextInput 小部件。 自定义小部件的样式 1 2 3 4 class CommentFormClass(forms.Form):</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>安全</category></item><item><title>Django REST Framework 权限管理</title><link>https://www.chenshaowen.com/blog/permissions-of-django-rest-framework.html</link><pubDate>Fri, 07 Jul 2017 06:47:19 +0000</pubDate><atom:modified>Fri, 07 Jul 2017 06:47:19 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/permissions-of-django-rest-framework.html</guid><description>1. DRF的权限管理 Django REST Framework的权限管理包括两个部分。 一个是认证Authentication方式。指定对用户进行鉴权的方式，获取request.user。 一个是权限控制Permissions。针对Django资源、用户类别进行权限</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>后端</category><category>安全</category><category>API</category><category>权限</category></item><item><title>安全扫描工具Arachni源码分析（一）</title><link>https://www.chenshaowen.com/blog/source-code-analysis-of-arachni-1.html</link><pubDate>Fri, 16 Jun 2017 21:02:22 +0000</pubDate><atom:modified>Fri, 16 Jun 2017 21:02:22 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/source-code-analysis-of-arachni-1.html</guid><description>Arachni是一个基于Ruby on Rails框架的Web安全漏洞扫描工具。 1. Ruby on Rails Ruby on Rails ，缩写ROR，是一个Web框架，包括两部分内容： Ruby 语言和 Rails 框架。Ruby一直以来流行于日本，直到2004年，26 岁的丹麦人 David Heinemeier Hansson 提出了Web框架 - Rai</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>工具</category><category>安全</category><category>源码</category></item><item><title>同源策略与跨域访问</title><link>https://www.chenshaowen.com/blog/same-origin-policy.html</link><pubDate>Tue, 13 Jun 2017 17:19:03 +0000</pubDate><atom:modified>Tue, 13 Jun 2017 17:19:03 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/same-origin-policy.html</guid><description>1. 同源策略 同源策略是浏览器的安全基石。 同源的定义，包括三个方面： 协议相同 域名相同 端口相同 限制范围： Cookie、LocalStorage 和 IndexDB 无法读取 DOM 无法获得 AJAX 请求不能发送 简单说，协议、域名、端口三者任意不同的两个 URL 之间不允许通信，范围包括</description><dc:creator>微信公众号</dc:creator><category>前端</category><category>网络</category><category>安全</category><category>博文</category></item><item><title>XSS Cheat Sheet</title><link>https://www.chenshaowen.com/blog/xss-cheat-sheet.html</link><pubDate>Sat, 20 May 2017 09:12:31 +0000</pubDate><atom:modified>Sat, 20 May 2017 09:12:31 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/xss-cheat-sheet.html</guid><description>如果使用Chrome浏览器测试XSS向量，请关闭浏览器对XSS的拦截功能。首先，关闭所有Chrome浏览器进程，然后执行： 1 chrome.exe -args --disable-xss-auditor --args --disable-web-security 进入非Web安全模式。 1. 利用&amp;lt;&amp;gt;标记注入HTML/JavaScript 1 &amp;lt;script&amp;gt;alert(&amp;#39;XSS&amp;#39;)&amp;lt;/script&amp;gt; 1 &amp;#39;&amp;#39;;!--&amp;#34;&amp;lt;XSS&amp;gt;=&amp;amp;{()} 1 2 //SRC的</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>安全</category><category>XSS</category></item><item><title>XSS 原理、构造</title><link>https://www.chenshaowen.com/blog/principle-and-construction-of-xss.html</link><pubDate>Tue, 16 May 2017 20:04:53 +0000</pubDate><atom:modified>Tue, 16 May 2017 20:04:53 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/principle-and-construction-of-xss.html</guid><description>XSS是一种在前端执行JavaScript脚本的攻击方式。随着UGC站点的流行，用户产生数据剧增，数据块的网络连接越来越有利于XSS的实施与传播。XSS带来的危害有：窃取用户cookies，窃取个人信息；劫持会话，操纵用户网络数据；发起dd</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>安全</category><category>JavaScript</category><category>XSS</category></item><item><title>第三方登录和单点登录简介</title><link>https://www.chenshaowen.com/blog/third-party-login-and-single-sign-on.html</link><pubDate>Thu, 04 May 2017 20:41:35 +0000</pubDate><atom:modified>Thu, 04 May 2017 20:41:35 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/third-party-login-and-single-sign-on.html</guid><description>登录的会话机制: http 是无状态协议，浏览器的每次请求都是相互独立。但并不是每次 http 请求都与状态无关，为此，浏览器和服务器需要共同维护一个状态，这就是会话机制。一种方法是，浏览器第一次向服务器发起请求，服务器会将浏览器返回 sessionID，后续浏</description><dc:creator>微信公众号</dc:creator><category>安全</category><category>DevOps</category><category>博文</category></item><item><title>DDoS 攻击入门</title><link>https://www.chenshaowen.com/blog/ddos-101.html</link><pubDate>Thu, 23 Feb 2017 20:17:24 +0000</pubDate><atom:modified>Thu, 23 Feb 2017 20:17:24 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/ddos-101.html</guid><description>1. 什么是 DDoS 举个栗子，春节买票期间，高铁票一出，全国人民都向12306的服务器发送连接请求。然后，12306的服务器就会不响应或者较慢响应网页请求。这就构成了一次DDoS攻击。通过大量并发的请求，迫使目标服务受到影响，甚至终止。 DDoS攻击是</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>网络</category><category>安全</category><category>DDoS</category><category>入门</category></item><item><title>BWAPP 学习与使用</title><link>https://www.chenshaowen.com/blog/study-of-bwapp.html</link><pubDate>Sun, 25 Dec 2016 15:38:42 +0000</pubDate><atom:modified>Sun, 25 Dec 2016 15:38:42 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/study-of-bwapp.html</guid><description>1. BWAPP简介 buggy web Application，简称BWAPP，这是一个集成了各种常见漏洞和最新漏洞的开源Web应用程序，目的是帮助网络安全爱好者、开发人员和学生发现并防止网络漏洞。包含了超过100种漏洞，涵盖了所有主要的已知Web漏洞，包括O</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>安全</category><category>网络</category><category>学习</category><category>BWAPP</category></item><item><title>Burpsuite 实践与 Web 越权攻击</title><link>https://www.chenshaowen.com/blog/burpsuite-web-attack-detection.html</link><pubDate>Fri, 16 Dec 2016 16:15:54 +0000</pubDate><atom:modified>Fri, 16 Dec 2016 16:15:54 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/burpsuite-web-attack-detection.html</guid><description>1. Burpsuite简介 Burp Suite 是用于攻击web 应用程序的集成平台。它包含了许多工具，并为这些工具设计了许多接口，以促进加快攻击应用程序的过程。 所有的工具都共享一个能处理并显示HTTP 消息、持久性、认证、代理、日志、警报的一个强大的可扩展的框架</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>网络</category><category>安全</category><category>攻击</category><category>Web</category><category>Burpsuite</category></item><item><title>匿名网络概述</title><link>https://www.chenshaowen.com/blog/anonymous-network.html</link><pubDate>Mon, 27 Jun 2016 11:24:44 +0000</pubDate><atom:modified>Mon, 27 Jun 2016 11:24:44 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/anonymous-network.html</guid><description>匿名通信是由 Chaum 提出的，他提出了基于Mix节点的匿名通信算法，Mix 节点接收多个发送者的消息，并对这些消息进行混合处理，然后传输给接收者，因此掩盖了发送者和接受者的身份信息，实现了匿名。 1. 匿名通信的基本框架 1.1 匿名属性 匿名属性包括不可辨识性(u</description><dc:creator>微信公众号</dc:creator><category>匿名网络</category><category>Tor</category><category>安全</category></item></channel></rss>