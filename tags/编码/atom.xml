<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>编码 on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/%E7%BC%96%E7%A0%81/</link><description>Recent content in 编码 on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Mon, 08 Jun 2020 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/%E7%BC%96%E7%A0%81/atom.xml" rel="self" type="application/rss+xml"/><item><title>使用 Base64 解码 JWT Playload 数据不完整</title><link>https://www.chenshaowen.com/blog/incomplete-data-using-base64-decoding-jwt-playload.html</link><pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate><atom:modified>Mon, 08 Jun 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/incomplete-data-using-base64-decoding-jwt-playload.html</guid><description>在对 JWT 进行 Base64 解码时，发现 JSON 数据不完整。本文主要介绍相关知识点并解决这个问题。 1. JWT 简介 JWT 通过在 Header 中设置 Authorization: Bearer &amp;lt;token&amp;gt; 进行认证的传递。 JWT Token 是一个 . 连接的 Base64 编码字符串，类似这样 Header.Payload.Signature ，有三部分组成： Header ，定义 Token 类型和加密算法 1 2 3 4 { &amp;#34;alg&amp;#34;: &amp;#34;HS256&amp;#34;, &amp;#34;typ&amp;#34;: &amp;#34;JWT&amp;#34; } Payload ，负载信息，通</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Go</category><category>JWT</category><category>编码</category><category>Base64</category></item><item><title>开发 Tips（3）</title><link>https://www.chenshaowen.com/blog/developing-tips-3.html</link><pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate><atom:modified>Fri, 02 Nov 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/developing-tips-3.html</guid><description>主要记录最近遇到的一些开发问题，解决方法。 1. Python 的日志模块 Python 的 logging 模块主要由四个部分组成： Loggers: 可供程序直接调用的接口 Handlers: 将日志记录输出至合适的位置 Filters: 提供更细粒度的日志是否输出判断 Formatters: 定制最终记录打印的布局格式 看下面这个例子，log1.py 文件 1 2 3 4</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tips</category><category>Python</category><category>编码</category></item><item><title>Django 中使用 utf8mb4 支持 emoji 表情</title><link>https://www.chenshaowen.com/blog/using-utf8mb4-in-django-to-support-emoji-expression.html</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><atom:modified>Mon, 25 Jun 2018 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-utf8mb4-in-django-to-support-emoji-expression.html</guid><description>1. 什么是 utf8 理论上，utf8 使用 1-6 个字符， 实际上，最新的 utf8 规范只使用一到四个字节，最大能编码21位，正好能够表示所有的 17个 Unicode 平面。 2. 什么是 utf8mb4 utf8mb4 是 utf8 的超集，理论上原来使用 utf8，然后将字符集修改为 utf8mb4，也不会对已有的utf8 编码读</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Django</category><category>字符集</category><category>编码</category><category>表情包</category></item><item><title>Base64 编码</title><link>https://www.chenshaowen.com/blog/base64-code.html</link><pubDate>Wed, 02 Aug 2017 17:00:31 +0000</pubDate><atom:modified>Wed, 02 Aug 2017 17:00:31 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/base64-code.html</guid><description>1. 应用场景 1.1 Mail 由于 RFC821 要求邮件内容必须为 ASCII 码。当邮件中有其他的非ASCII字符或二进制数据时，就需要 Content-Transfer-Encoding，Base64是其中的一种方法。 1.2 URL 有些应用需要把二进制数据放到URL里，而URL只允许特定</description><dc:creator>微信公众号</dc:creator><category>整理</category><category>前端</category><category>编码</category><category>数据</category><category>Base64</category></item><item><title>Python的字符编码入门</title><link>https://www.chenshaowen.com/blog/python-coding.html</link><pubDate>Tue, 08 Nov 2016 20:21:42 +0000</pubDate><atom:modified>Tue, 08 Nov 2016 20:21:42 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/python-coding.html</guid><description>背景: 刚做完一个django的数据查询web项目，数据来源于内部API查询，每次查询都需要调用若干API查询数据渲染在前端页面。由于，相关的数据不会经常变动，为了提高前端响应速度、在API不可用时依然能够查询，设计了缓存。API查询到的数据</description><dc:creator>微信公众号</dc:creator><category>Python</category><category>编码</category><category>博文</category></item></channel></rss>