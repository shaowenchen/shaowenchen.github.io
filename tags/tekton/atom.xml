<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Tekton on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/tekton/</link><description>Recent content in Tekton on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Wed, 26 Apr 2023 10:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/tekton/atom.xml" rel="self" type="application/rss+xml"/><item><title>Tekton 优化之定制集群调度器</title><link>https://www.chenshaowen.com/blog/custom-cluster-scheduler-to-optimize-tekton.html</link><pubDate>Wed, 26 Apr 2023 10:00:00 +0000</pubDate><atom:modified>Wed, 26 Apr 2023 10:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/custom-cluster-scheduler-to-optimize-tekton.html</guid><description>1. 受限的构建环境无法满足构建需求 Tekton 是基于 Kubernetes 集群的 CICD 引擎，相较于 Jenkins 更加云原生。说人话就是，更好开发插件、更好扩容、更好可观测性、更好玩儿。 由于代码仅能落盘公司内网，导致构建集群仅能部署于办公内网。这导致了很多受限： 硬件资源，没有弹性扩容能力 网</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>优化</category><category>Tekton</category><category>CICD</category><category>DevOps</category></item><item><title>Tekton 优化之无限 IO 能力</title><link>https://www.chenshaowen.com/blog/infinite-io-capability-for-tekton.html</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><atom:modified>Wed, 26 Apr 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/infinite-io-capability-for-tekton.html</guid><description>1. 关闭 affinity-assistant 之后 在前面的博文中，我通过关闭 affinity-assistant、使用 NFS 存储，平均每条流水线执行时间节约了近 30 秒。[1] affinity-assistant 的影响 在关闭之前，创建 Pod 的时序图如下: 由于 affinity-assistant 开启，每条流水线绑定在一个节点执行。 在关闭之后，创建 Pod 的时序图如</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tekton</category><category>云原生</category><category>CICD</category><category>云原生</category></item><item><title>优化 Tekton 执行克隆任务慢问题，节省约 30 秒</title><link>https://www.chenshaowen.com/blog/optimizing-the-slow-of-tekton-clone-task.html</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 16 Feb 2023 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/optimizing-the-slow-of-tekton-clone-task.html</guid><description>1. 现象 - Tekton 克隆代码任务慢 在执行克隆任务时，Tekton 很费时间，多仓库下一般都需要 2 分 30 秒左右。如下图: 仅克隆的流水线就需要执行 2 分钟 16 秒，而克隆脚本实际上仅执行 1-3 秒。其中大部分时间花在了哪里？能不能减少？这是本篇主要想讨论的问题。 2. 分析克</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tekton</category><category>Kubernetes</category><category>CI</category><category>CICD</category><category>DevOps</category></item><item><title>Tekton 压力测试及构建集群参数优化</title><link>https://www.chenshaowen.com/blog/tekton-stress-test-and-optimize-k8s-cluster.html</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><atom:modified>Thu, 10 Nov 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/tekton-stress-test-and-optimize-k8s-cluster.html</guid><description>1. 测试目的 调优构建集群的参数 探测 Tekton 并发流水线数量上限 给出单个集群最佳并发上限值 2. 相关组件及机器配置 Kubernetes 版本 v1.21.4 Tekton 版本 v0.24.1，与生产版本保持一致 OpenEBS 版本 localpv 版本 3.3.0，与生产版本保持一致 集群节点配置，共五个节点，四个用于构建 node1 master</description><dc:creator>微信公众号</dc:creator><category>Tekton</category><category>Kubernetes</category><category>大集群</category><category>调优</category><category>博文</category></item><item><title>OpenEBS 证书过期导致服务不可用</title><link>https://www.chenshaowen.com/blog/expiration-of-the-openebs-cert.html</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><atom:modified>Fri, 09 Sep 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/expiration-of-the-openebs-cert.html</guid><description>1. 安装方式 1 2 kubectl apply -f https://openebs.github.io/charts/openebs-operator.yaml kubectl patch storageclass openebs-hostpath -p &amp;#39;{&amp;#34;metadata&amp;#34;: {&amp;#34;annotations&amp;#34;:{&amp;#34;storageclass.kubernetes.io/is-default-class&amp;#34;:&amp;#34;true&amp;#34;}}}&amp;#39; OpenEBS 主要用来给 Tekton 流水线作为默认的存储使用。之前，我也试过 Longhorn，但是高峰期扛不住，流水线 Pending。而卸载 Longhorn 之后有残留，导致 kube-apiserver 一直报错，最后花了很大力气才删除。 2. Kubernetes 集群证书过期之后，OpenE</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>OpenEBS</category><category>存储</category><category>Kubernetes</category><category>Tekton</category></item><item><title>如何查看 Tekton 的流水线指标</title><link>https://www.chenshaowen.com/blog/how-to-insight-the-pipeline-of-tekton.html</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><atom:modified>Tue, 07 Jun 2022 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-insight-the-pipeline-of-tekton.html</guid><description>1. 抓取 Tekton Metrics 新增 ConfigMap 配置文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 cat &amp;lt;&amp;lt;EOF | kubectl apply -f - apiVersion: v1 kind: ConfigMap metadata: name: config-observability namespace: tekton-pipelines labels: app.kubernetes.io/instance: default app.kubernetes.io/part-of: tekton-pipelines data: metrics.backend-destination: prometheus metrics.taskrun.level: &amp;#34;task&amp;#34; metrics.taskrun.duration-type: &amp;#34;histogram&amp;#34; metrics.pipelinerun.level: &amp;#34;pipeline&amp;#34; metrics.pipelinerun.duration-type: &amp;#34;histogram&amp;#34; EOF 修改 data 中的配置，会改变上报指标的粒度，甚至会严重影响 Prometheus 的性能，需要谨慎修改。 重启 Tekton 1 kubectl -n tekton-pipelines rollout restart deployment tekton-pipelines-controller [可选] 将 tekton-pipelines-controller 设置为 NodePort</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Kubernetes</category><category>Tekton</category><category>监控</category><category>指标</category></item><item><title>基于 Tekton 的 CICD 平台</title><link>https://www.chenshaowen.com/blog/a-cicd-system-based-on-tekton.html</link><pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate><atom:modified>Wed, 25 Aug 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/a-cicd-system-based-on-tekton.html</guid><description>1.背景 1.1 目前使用 Jenkins 遇到的问题 编排引擎不稳定 Jenkins 是由 Java 编写的编排引擎，在 Full GC 时会 Stop The World(STW)。在大规模构建时，STW 可能会导致 Jenkins 无法处理新的请求。 大量构建卡顿 Jenkins 使用磁盘文件存储数据，每条流水线、每次构建都会占用一个文件目录，产生大</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CICD</category><category>DevOps</category><category>Tekton</category></item><item><title>多集群下的 Tekton 流水线</title><link>https://www.chenshaowen.com/blog/using-kubefed-to-distribute-tekton-resource-cross-cluster.html</link><pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate><atom:modified>Sat, 26 Jun 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-kubefed-to-distribute-tekton-resource-cross-cluster.html</guid><description>1. 多集群构建 Tekton 的优势 借助于 Kubernetes, Tekton 已经具备很好的弹性, 能够支持大规模构建。同时, 开发 Task 主要使用 Yaml 和 Shell, 这扩大了 Tekton 的各种场景适配范围。 上面是一张 Tekton 在多集群下的示意图。为什么 Tekton 需要多集群执行流水线？ 随时可变的 Kubernetes 集群。单一的 Kubernetes 集群, 无法满足运维的要求,</description><dc:creator>微信公众号</dc:creator><category>Tekton</category><category>KubeFed</category><category>Kubernetes</category><category>多集群</category><category>博文</category></item><item><title>在 Tekton 中如何实现审批功能</title><link>https://www.chenshaowen.com/blog/how-to-implement-approval-function-in-tekton.html</link><pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate><atom:modified>Thu, 24 Jun 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-implement-approval-function-in-tekton.html</guid><description>1. CICD 平台的基本功能 常见的 CICD 引擎并不适合直接提供给业务方使用。主要原因在于用户学习成本高、缺乏必要的鉴权、维护升级难度大。 我们通常会基于流程引擎，针对业务进行适配提高易用性，针对场景进行封装收敛复杂度，那么一个 CICD 平台需要具备哪些基本的功能呢？</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tekton</category><category>Kubernetes</category><category>CICD</category><category>DevOps</category></item><item><title>Jenkins 与 Tekton 的对比</title><link>https://www.chenshaowen.com/blog/jenkins-vs-tekton.html</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><atom:modified>Sat, 01 May 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/jenkins-vs-tekton.html</guid><description>下面是一个 Jenkins 与 Tekton 对比的列表: 功能 Jenkins Tekton 编程语言 Java Golang 开发插件语言 Java Shell、Yaml 流水线描述语言 Groovy、Shell Yaml、Shell 插件生态 很多插件，LDAP、GitLab 不足 插件数量 1500+ 100+ 插件之间的兼容性 可能会有冲突，不能随便升级 完</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>CICD</category><category>Jenkins</category><category>Tekton</category></item><item><title>Tekton 如何接入物理机进行构建</title><link>https://www.chenshaowen.com/blog/how-to-add-physical-machines-to-tekton.html</link><pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate><atom:modified>Wed, 28 Apr 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-add-physical-machines-to-tekton.html</guid><description>1. 为什么需要物理构建机 在文章《如何接入远程 macOS 物理机进行 Jenkins 流水线构建》中，我描述了在 Jenkins 中添加物理构建机的方法。这并不是我拍脑袋想的需求，而是当时真的有 ToB 的商业客户在咨询方案。 对于多端开发商来说，构建 Android、IOS、macOS、Arm 、</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Tekton</category><category>云原生</category><category>Kubernetes</category><category>CICD</category><category>DevOps</category></item><item><title>Tekton Hub 正式上线 - https://hub.tekton.dev/</title><link>https://www.chenshaowen.com/blog/tekton-hub-is-live.html</link><pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate><atom:modified>Wed, 24 Feb 2021 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/tekton-hub-is-live.html</guid><description>原文由来自 Red Hat (CDF 成员) 的 Puneet Punamiya 撰写。 Tekton 是持续交付基金会 (CDF) 下的一个开源项目。它提供了一个以云原生构建 CI/CD 系统的框架。简单点说, 人们可以将整个 CI/CD 流水线定义为 Kubernetes 资源。 Tekton Pipelines 的核心是一个可复用的组件 - Task, 很容易共享。在 Tekton Catalog 仓库中包含了这些 Task 的列表。这些 Task 可</description><dc:creator>微信公众号</dc:creator><category>翻译</category><category>Tekton</category><category>CICD</category><category>DevOps</category></item><item><title>Tekton 概念篇 - 好大一盘棋</title><link>https://www.chenshaowen.com/blog/the-concept-of-tekton-a-big-game.html</link><pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate><atom:modified>Sat, 12 Dec 2020 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/the-concept-of-tekton-a-big-game.html</guid><description>1. 谈谈对 CICD 工具的审美 我在文档 软件产品是团队能力的输出 中提到，软件产品是解决方案的交付承载物，其优劣取决于团队对核心问题的理解。对领域有深入理解，交付的产品才有好的可能。CICD 是一个应用很广泛的领域，在不同的场景下，总有人在琢磨重复造轮子，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>DevOps</category><category>Tekton</category><category>CICD</category><category>思考</category></item></channel></rss>