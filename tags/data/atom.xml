<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Data on 陈少文的网站</title><link>https://www.chenshaowen.com/tags/data/</link><description>Recent content in Data on 陈少文的网站</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;2016 - {year}, All Rights Reserved.</copyright><lastBuildDate>Sat, 18 Jan 2025 01:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://www.chenshaowen.com/tags/data/atom.xml" rel="self" type="application/rss+xml"/><item><title>Fluid 下的 Juicefs 企业版维护</title><link>https://www.chenshaowen.com/blog/fluid-juicefs-enterprise-maintenance.html</link><pubDate>Sat, 18 Jan 2025 01:00:00 +0000</pubDate><atom:modified>Sat, 18 Jan 2025 01:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/fluid-juicefs-enterprise-maintenance.html</guid><description>1. 设置环境变量 1 2 export NAMESPACE=xxx export PVC=xxx 2. Dataset 无法就绪 2.1 Fluid 组件问题 1 kubectl -n fluid-system get pod -o wide | grep -v &amp;#34;Running&amp;#34; 可能出现没有正常启动的情况。 2.2 有异常的 Dataset 异常的资源可能导致 Fluid 资源不断重启，需要人工介入删除。 2.3 检查 Worker \ Fuse 副本 worker 副本 1 kubectl -n ${NAMESPACE} get sts -l release=${PVC} 1 kubectl -n ${NAMESPACE} get pod -l release=${PVC},role=juicefs-worker fuse 副本 1 kubectl -n kas-job get ds -l</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category><category>Lustre</category></item><item><title>使用 Fluid 和 S3FS 对接 S3 存储及性能测试</title><link>https://www.chenshaowen.com/blog/using-fluid-and-s3fs-to-access-s3-storage-and-performance-testing.html</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><atom:modified>Thu, 05 Dec 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-fluid-and-s3fs-to-access-s3-storage-and-performance-testing.html</guid><description>本文使用的是 Fluid 1.0 版本，高版本的配置文件路径发生了变化，需要根据实际情况调整。 1. 制作镜像 1.1 fluid_config_init.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #!/usr/bin/env python import json import os rawStr = &amp;#34;&amp;#34; with open(&amp;#34;/etc/fluid/config.json&amp;#34;, &amp;#34;r&amp;#34;) as f: rawStr = f.readlines() rawStr = rawStr[0] script = &amp;#34;&amp;#34;&amp;#34; #!/bin/sh set -ex MNT_TO=$targetPath trap &amp;#34;umount ${MNT_TO}&amp;#34; SIGTERM mkdir -p ${MNT_TO}</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>s3</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>使用 Fluid 对接 S3 存储及性能测试</title><link>https://www.chenshaowen.com/blog/using-fluid-to-access-s3-storage-and-performance-testing.html</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><atom:modified>Wed, 04 Dec 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-fluid-to-access-s3-storage-and-performance-testing.html</guid><description>1. Jindo 挂载 S3 配置环境变量 1 2 3 4 export ENDPOINT=obs.ap-southeast-3.myhuaweicloud.com export BUCKET= export AK= export SK= 创建凭证 1 2 3 4 5 6 7 8 9 10 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: v1 kind: Secret metadata: name: mys3secret type: Opaque stringData: fs.s3.accessKeyId: ${AK} fs.s3.accessKeySecret: ${SK} EOF 创建 Dataset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: Dataset metadata: name: mys3-jindo spec: mounts: - mountPoint: s3://${BUCKET}/test2/ options: fs.s3.endpoint: ${ENDPOINT} encryptOptions: - name: fs.s3.accessKeyId valueFrom: secretKeyRef: name: mys3secret key: fs.s3.accessKeyId - name: fs.s3.accessKeySecret valueFrom: secretKeyRef: name:</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>s3</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>使用 Fluid 对接 OBS 存储及性能测试</title><link>https://www.chenshaowen.com/blog/using-fluid-to-access-obs-storage-and-performance-testing.html</link><pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate><atom:modified>Tue, 22 Oct 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-fluid-to-access-obs-storage-and-performance-testing.html</guid><description>1. Jindo 挂载 OBS 配置环境变量 1 2 3 4 export ENDPOINT=obs.cn-north-4.myhuaweicloud.com export BUCKET= export AK= export SK= 创建凭证 1 2 3 4 5 6 7 8 9 10 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: v1 kind: Secret metadata: name: myobssecret type: Opaque stringData: fs.obs.accessKeyId: ${AK} fs.obs.accessKeySecret: ${SK} EOF 创建 Dataset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: Dataset metadata: name: myobs-jindo spec: mounts: - mountPoint: obs://${BUCKET}/test2/ options: fs.obs.endpoint: ${ENDPOINT} encryptOptions: - name: fs.obs.accessKeyId valueFrom: secretKeyRef: name: myobssecret key: fs.obs.accessKeyId - name: fs.obs.accessKeySecret valueFrom: secretKeyRef: name:</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>OBS</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>使用 Fluid 对接 OSS 存储及性能测试</title><link>https://www.chenshaowen.com/blog/using-fluid-to-access-oss-storage-and-performance-testing.html</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><atom:modified>Tue, 11 Jun 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/using-fluid-to-access-oss-storage-and-performance-testing.html</guid><description>1. Jindo 直接加速 OSS 配置环境变量 1 2 3 4 export ENDPOINT=oss-cn-beijing-internal.aliyuncs.com export BUCKET= export AK= export SK= 创建凭证 1 2 3 4 5 6 7 8 9 10 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: v1 kind: Secret metadata: name: myosssecret type: Opaque stringData: fs.oss.accessKeyId: ${AK} fs.oss.accessKeySecret: ${SK} EOF 创建 Dataset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: Dataset metadata: name: myoss-jindo spec: mounts: - mountPoint: oss://${BUCKET}/test2/ options: fs.oss.endpoint: ${ENDPOINT} encryptOptions: - name: fs.oss.accessKeyId valueFrom: secretKeyRef: name: myosssecret key: fs.oss.accessKeyId - name: fs.oss.accessKeySecret valueFrom:</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>OSS</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>如何预热 Juicefs 数据</title><link>https://www.chenshaowen.com/blog/how-to-warmup-juicefs-data.html</link><pubDate>Sun, 09 Jun 2024 00:00:00 +0000</pubDate><atom:modified>Sun, 09 Jun 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/how-to-warmup-juicefs-data.html</guid><description>1. 关于 JuiceFS 的缓存 在主机上，预热的缓存是直接放在主机上的。 在集群中，分为两级缓存: Worker，提供集群级别共享的缓存 Fuse，提供仅当前节点级别的缓存 2. 使用 JuiceFS 客户端预热数据 需要注意的是在 Fuse 层预热，仅对当前节点有效，如果需要预热整个集群，需要在</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>Fluid 挂载 S3 为 PVC 以及性能测试</title><link>https://www.chenshaowen.com/blog/fluid-using-s3-as-pvc.html</link><pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate><atom:modified>Sun, 19 May 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/fluid-using-s3-as-pvc.html</guid><description>1. 创建 Dataset 1 2 3 4 5 6 7 8 9 10 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: v1 kind: Secret metadata: name: my-s3 type: Opaque stringData: aws.accessKeyId: xxx aws.secretKey: xxx EOF 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: Dataset metadata: name: my-s3 spec: mounts: - mountPoint: s3://BUCKET/ name: s3 options: alluxio.underfs.s3.endpoint: ks3-cn-beijing-internal.ksyun.com alluxio.underfs.s3.disable.dns.buckets: &amp;#34;false&amp;#34; encryptOptions: - name: aws.accessKeyId valueFrom: secretKeyRef: name: my-s3 key: aws.accessKeyId - name: aws.secretKey valueFrom: secretKeyRef: name: my-s3 key: aws.secretKey accessModes: - ReadWriteMany EOF 2. 创建 Runtime 1 2 3 4 5 6 7 8 9</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>Fluid 使用 Lustre Runtime 以及性能测试</title><link>https://www.chenshaowen.com/blog/fluid-using-lustre-runtime-and-performance-testing.html</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><atom:modified>Thu, 16 May 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/fluid-using-lustre-runtime-and-performance-testing.html</guid><description>1. 分析 Fluid 挂载 NFS 存储 查看 Fuse Pod 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 kubectl get pod nfs-demo-fuse-f9wg8 -oyaml apiVersion: v1 kind: Pod metadata: generateName: nfs-demo-fuse- spec: containers: - command: - /usr/local/bin/entrypoint.sh env: - name: FLUID_RUNTIME_TYPE value: thin - name: FLUID_RUNTIME_NS value: default - name: FLUID_RUNTIME_NAME value: nfs-demo - name: MOUNT_POINT value: /runtime-mnt/thin/default/nfs-demo/thin-fuse - name: MOUNT_OPTIONS value: ro image: fluidcloudnative/nfs:v0.1 imagePullPolicy: IfNotPresent lifecycle: preStop: exec: command: - sh - -c - umount /runtime-mnt/thin/default/nfs-demo/thin-fuse name: thin-fuse securityContext: privileged: true volumeMounts:</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category><category>Lustre</category></item><item><title>Fluid 使用 Lustre Runtime 以及性能测试</title><link>https://www.chenshaowen.com/blog/fluid-using-lustre-runtime-and-performance-testing.html</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><atom:modified>Thu, 16 May 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/fluid-using-lustre-runtime-and-performance-testing.html</guid><description>1. 打包 Fluid Runtime 镜像 创建 fluid_config_init.py 脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #!/usr/bin/env python import json rawStr = &amp;#34;&amp;#34; with open(&amp;#34;/etc/fluid/config.json&amp;#34;, &amp;#34;r&amp;#34;) as f: rawStr = f.readlines() rawStr = rawStr[0] script = &amp;#34;&amp;#34;&amp;#34; #!/bin/sh set -ex MNT_FROM=$mountPoint MNT_TO=$targetPath trap &amp;#34;umount ${MNT_TO}&amp;#34; SIGTERM mkdir -p ${MNT_TO} mount -t lustre -o relatime,flock ${MNT_FROM} ${MNT_TO} sleep inf &amp;#34;&amp;#34;&amp;#34; obj = json.loads(rawStr) with open(&amp;#34;mount-lustre.sh&amp;#34;, &amp;#34;w&amp;#34;) as f: f.write(&amp;#39;mountPoint=&amp;#34;%s&amp;#34;\n&amp;#39; % obj[&amp;#34;mounts&amp;#34;][0][&amp;#34;mountPoint&amp;#34;]) f.write(&amp;#39;targetPath=&amp;#34;%s&amp;#34;\n&amp;#39; % obj[&amp;#34;targetPath&amp;#34;]) f.write(script) 只需调整一下 mount 命令即可。 创建启动脚本 entrypoint.sh 1 2 3</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category><category>Lustre</category></item><item><title>Fluid 使用 NFS Runtime 以及性能测试</title><link>https://www.chenshaowen.com/blog/fluid-using-nfs-runtime-and-performance-testing.html</link><pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate><atom:modified>Tue, 14 May 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/fluid-using-nfs-runtime-and-performance-testing.html</guid><description>1. 创建 Dataset 1 2 3 4 5 6 7 8 9 10 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: Dataset metadata: name: nfs-demo spec: mounts: - mountPoint: x.x.x.x:/x-x/ name: nfs-demo EOF 2. 创建 Runtime 1 2 3 4 5 6 7 8 9 10 11 12 13 14 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: ThinRuntimeProfile metadata: name: nfs spec: fileSystemType: nfs fuse: image: fluidcloudnative/nfs imageTag: v0.1 imagePullPolicy: IfNotPresent command: - &amp;#34;/usr/local/bin/entrypoint.sh&amp;#34; EOF 1 2 3 4 5 6 7 8 kubectl apply -f - &amp;lt;&amp;lt;EOF apiVersion: data.fluid.io/v1alpha1 kind: ThinRuntime metadata: name: nfs-demo spec: profileName: nfs EOF 3. 创建测试 Pod 1 2 3 4 5 6 7 8 9 10 11 12</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item><item><title>使用 Fluid 和 JuiceFS 在 Kubernetes 管理数据</title><link>https://www.chenshaowen.com/blog/managing-data-in-kubernetes-using-fluid-and-juicefs.html</link><pubDate>Sat, 27 Jan 2024 00:00:00 +0000</pubDate><atom:modified>Sat, 27 Jan 2024 00:00:00 +0000</atom:modified><guid>https://www.chenshaowen.com/blog/managing-data-in-kubernetes-using-fluid-and-juicefs.html</guid><description>1. Fluid 简介 下面是来源于 https://github.com/fluid-cloudnative/fluid 的 Fluid 的架构图: Fluid 抽象了两个概念: Dataset，数据集合，用户视角的抽象 Runtime，数据存储、加速等真实服务的抽象 Fluid 主要解决了传统缓存系统在 Kubernetes 上使用的问题: 通过 CRD 对数据集合 Dataset 进行描述，提供生命周期管理 依赖于 Runtime 后端，</description><dc:creator>微信公众号</dc:creator><category>博文</category><category>Fluid</category><category>JuiceFS</category><category>AI</category><category>Data</category></item></channel></rss>